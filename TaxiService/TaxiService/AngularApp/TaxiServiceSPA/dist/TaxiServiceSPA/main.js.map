{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/cars/add-car/add-car.component.css","webpack:///./src/app/components/cars/add-car/add-car.component.html","webpack:///./src/app/components/cars/add-car/add-car.component.ts","webpack:///./src/app/components/cars/car-details/car-details.component.css","webpack:///./src/app/components/cars/car-details/car-details.component.html","webpack:///./src/app/components/cars/car-details/car-details.component.ts","webpack:///./src/app/components/cars/car-item/car-item.component.css","webpack:///./src/app/components/cars/car-item/car-item.component.html","webpack:///./src/app/components/cars/car-item/car-item.component.ts","webpack:///./src/app/components/cars/cars-list/cars-list.component.css","webpack:///./src/app/components/cars/cars-list/cars-list.component.html","webpack:///./src/app/components/cars/cars-list/cars-list.component.ts","webpack:///./src/app/components/cars/cars.component.css","webpack:///./src/app/components/cars/cars.component.html","webpack:///./src/app/components/cars/cars.component.ts","webpack:///./src/app/components/drivers/drivers.component.css","webpack:///./src/app/components/drivers/drivers.component.html","webpack:///./src/app/components/drivers/drivers.component.ts","webpack:///./src/app/components/drivers/edit-driver/edit-driver.component.css","webpack:///./src/app/components/drivers/edit-driver/edit-driver.component.html","webpack:///./src/app/components/drivers/edit-driver/edit-driver.component.ts","webpack:///./src/app/components/errors/no-cars-error/no-cars-error.component.css","webpack:///./src/app/components/errors/no-cars-error/no-cars-error.component.html","webpack:///./src/app/components/errors/no-cars-error/no-cars-error.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/rides/accept-ride/accept-ride.component.css","webpack:///./src/app/components/rides/accept-ride/accept-ride.component.html","webpack:///./src/app/components/rides/accept-ride/accept-ride.component.ts","webpack:///./src/app/components/rides/add-comment/add-comment.component.css","webpack:///./src/app/components/rides/add-comment/add-comment.component.html","webpack:///./src/app/components/rides/add-comment/add-comment.component.ts","webpack:///./src/app/components/rides/comment-details/comment-details.component.css","webpack:///./src/app/components/rides/comment-details/comment-details.component.html","webpack:///./src/app/components/rides/comment-details/comment-details.component.ts","webpack:///./src/app/components/rides/new-ride/new-ride.component.css","webpack:///./src/app/components/rides/new-ride/new-ride.component.html","webpack:///./src/app/components/rides/new-ride/new-ride.component.ts","webpack:///./src/app/components/rides/ride-details/ride-details.component.css","webpack:///./src/app/components/rides/ride-details/ride-details.component.html","webpack:///./src/app/components/rides/ride-details/ride-details.component.ts","webpack:///./src/app/components/rides/ride-item/ride-item.component.css","webpack:///./src/app/components/rides/ride-item/ride-item.component.html","webpack:///./src/app/components/rides/ride-item/ride-item.component.ts","webpack:///./src/app/components/rides/rides-list/rides-list.component.css","webpack:///./src/app/components/rides/rides-list/rides-list.component.html","webpack:///./src/app/components/rides/rides-list/rides-list.component.ts","webpack:///./src/app/components/rides/rides.component.css","webpack:///./src/app/components/rides/rides.component.html","webpack:///./src/app/components/rides/rides.component.ts","webpack:///./src/app/components/users/edit-user/edit-user.component.css","webpack:///./src/app/components/users/edit-user/edit-user.component.html","webpack:///./src/app/components/users/edit-user/edit-user.component.ts","webpack:///./src/app/components/users/full-user-details/full-user-details.component.css","webpack:///./src/app/components/users/full-user-details/full-user-details.component.html","webpack:///./src/app/components/users/full-user-details/full-user-details.component.ts","webpack:///./src/app/components/users/management/user-details/user-details.component.css","webpack:///./src/app/components/users/management/user-details/user-details.component.html","webpack:///./src/app/components/users/management/user-details/user-details.component.ts","webpack:///./src/app/components/users/management/user-item/user-item.component.css","webpack:///./src/app/components/users/management/user-item/user-item.component.html","webpack:///./src/app/components/users/management/user-item/user-item.component.ts","webpack:///./src/app/components/users/management/user-list/user-list.component.css","webpack:///./src/app/components/users/management/user-list/user-list.component.html","webpack:///./src/app/components/users/management/user-list/user-list.component.ts","webpack:///./src/app/components/users/password-change/password-change.component.css","webpack:///./src/app/components/users/password-change/password-change.component.html","webpack:///./src/app/components/users/password-change/password-change.component.ts","webpack:///./src/app/components/users/registration/registration.component.css","webpack:///./src/app/components/users/registration/registration.component.html","webpack:///./src/app/components/users/registration/registration.component.ts","webpack:///./src/app/components/users/users.component.css","webpack:///./src/app/components/users/users.component.html","webpack:///./src/app/components/users/users.component.ts","webpack:///./src/app/directives/dropdown.directive.ts","webpack:///./src/app/route-guards/auth.guard.ts","webpack:///./src/app/route-guards/login.guard.ts","webpack:///./src/app/route-guards/registration.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/cars-data.service.ts","webpack:///./src/app/services/cookie.service.ts","webpack:///./src/app/services/external-apis-data.service.ts","webpack:///./src/app/services/interfaces.ts","webpack:///./src/app/services/rides.service.ts","webpack:///./src/app/services/users.service.ts","webpack:///./src/app/services/usertype.enum.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from \"@angular/router\"\r\nimport { LoginComponent } from '../components/login/login.component';\r\nimport { HomeComponent } from '../components/home/home.component';\r\nimport { AuthGuard } from '../route-guards/auth.guard';\r\nimport { UsersComponent } from '../components/users/users.component';\r\nimport { LoginGuard } from '../route-guards/login.guard';\r\nimport { RegistrationComponent } from '../components/users/registration/registration.component';\r\nimport { RegistrationGuard } from '../route-guards/registration.guard';\r\nimport { NoCarsErrorComponent } from '../components/errors/no-cars-error/no-cars-error.component';\r\nimport { CarsComponent } from '../components/cars/cars.component';\r\nimport { AddCarComponent } from '../components/cars/add-car/add-car.component';\r\nimport { CarDetailsComponent } from '../components/cars/car-details/car-details.component';\r\nimport { FullUserDetailsComponent } from '../components/users/full-user-details/full-user-details.component';\r\nimport { EditUserComponent } from '../components/users/edit-user/edit-user.component';\r\nimport { PasswordChangeComponent } from '../components/users/password-change/password-change.component';\r\nimport { UserDetailsComponent } from '../components/users/management/user-details/user-details.component';\r\nimport { RidesComponent } from '../components/rides/rides.component';\r\nimport { NewRideComponent } from '../components/rides/new-ride/new-ride.component';\r\nimport { AcceptRideComponent } from '../components/rides/accept-ride/accept-ride.component';\r\nimport { RideDetailsComponent } from '../components/rides/ride-details/ride-details.component';\r\nimport { NoDriverGuard } from '../route-guards/no-driver.guard';\r\nimport { AddCommentComponent } from '../components/rides/add-comment/add-comment.component';\r\n\r\nconst appRoutes : Routes = [\r\n  {path:'login', component: LoginComponent, canActivate:[LoginGuard]},\r\n  {path:'registration', component: RegistrationComponent, canActivate:[LoginGuard, RegistrationGuard]},\r\n  {path: 'profile', component: FullUserDetailsComponent, canActivate:[AuthGuard]},\r\n  {path: 'edit-profile', component: EditUserComponent, canActivate:[AuthGuard]},\r\n  {path: 'password-change', component: PasswordChangeComponent, canActivate:[AuthGuard]},\r\n  {path:'driver-registration-error', component: NoCarsErrorComponent},\r\n  {path: 'location', component: NewRideComponent},\r\n  {path:'home', component: HomeComponent, canActivate:[AuthGuard], children:[\r\n    {path: 'rides', component: RidesComponent, children:[\r\n      {path: 'new', component: NewRideComponent},\r\n      {path: ':id/edit', component: NewRideComponent},\r\n      {path: ':id/accept', component: AcceptRideComponent},\r\n      {path: ':id/comment', component: AddCommentComponent},\r\n      {path: ':id', component: RideDetailsComponent},\r\n    ]},\r\n    {path: 'users', component: UsersComponent, children:[\r\n      {path: ':username', component: UserDetailsComponent}\r\n    ]},\r\n    {path: 'cars', component: CarsComponent, children:[\r\n      {path: 'new', component: AddCarComponent},\r\n      {path: ':id/edit', component: AddCarComponent},\r\n      {path: ':id', component: CarDetailsComponent}\r\n    ]}\r\n  ]},\r\n  {path: '', redirectTo:'home', pathMatch:'full'},\r\n  {path: '**', redirectTo:'home' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n  RouterModule.forRoot(appRoutes, {useHash:true})\r\n  ],\r\n  exports:[\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n }\r\n","module.exports = \"\"","module.exports = \"<app-header (featureSelected)=\\\"onNavigate($event)\\\"></app-header>\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\" >\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AuthService } from './services/auth.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { CookieService } from './services/cookie.service';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { DropdownDirective } from './directives/dropdown.directive';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { RegistrationComponent } from './components/users/registration/registration.component';\r\nimport { NoCarsErrorComponent } from './components/errors/no-cars-error/no-cars-error.component';\r\nimport { CarsComponent } from './components/cars/cars.component';\r\nimport { AddCarComponent } from './components/cars/add-car/add-car.component';\r\nimport { DriversComponent } from './components/drivers/drivers.component';\r\nimport { EditDriverComponent } from './components/drivers/edit-driver/edit-driver.component';\r\nimport { CarsListComponent } from './components/cars/cars-list/cars-list.component';\r\nimport { CarItemComponent } from './components/cars/car-item/car-item.component';\r\nimport { CarDetailsComponent } from './components/cars/car-details/car-details.component';\r\nimport { FullUserDetailsComponent } from './components/users/full-user-details/full-user-details.component';\r\nimport { PasswordChangeComponent } from './components/users/password-change/password-change.component';\r\nimport { EditUserComponent } from './components/users/edit-user/edit-user.component';\r\nimport { UserListComponent } from './components/users/management/user-list/user-list.component';\r\nimport { UserDetailsComponent } from './components/users/management/user-details/user-details.component';\r\nimport { UserItemComponent } from './components/users/management/user-item/user-item.component';\r\nimport { RidesComponent } from './components/rides/rides.component';\r\nimport { RidesListComponent } from './components/rides/rides-list/rides-list.component';\r\nimport { RideDetailsComponent } from './components/rides/ride-details/ride-details.component';\r\nimport { RideItemComponent } from './components/rides/ride-item/ride-item.component';\r\nimport { NewRideComponent } from './components/rides/new-ride/new-ride.component';\r\nimport { AcceptRideComponent } from './components/rides/accept-ride/accept-ride.component';\r\nimport { CommentDetailsComponent } from './components/rides/comment-details/comment-details.component';\r\nimport { AddCommentComponent } from './components/rides/add-comment/add-comment.component';\r\nimport { AgmCoreModule } from '@agm/core'\r\nimport { ExternalApisDataService } from './services/external-apis-data.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    DropdownDirective,\r\n    UsersComponent,\r\n    RegistrationComponent,\r\n    NoCarsErrorComponent,\r\n    CarsComponent,\r\n    AddCarComponent,\r\n    DriversComponent,\r\n    EditDriverComponent,\r\n    CarsListComponent,\r\n    CarItemComponent,\r\n    CarDetailsComponent,\r\n    FullUserDetailsComponent,\r\n    PasswordChangeComponent,\r\n    EditUserComponent,\r\n    UserListComponent,\r\n    UserDetailsComponent,\r\n    UserItemComponent,\r\n    RidesComponent,\r\n    RidesListComponent,\r\n    RideDetailsComponent,\r\n    RideItemComponent,\r\n    NewRideComponent,\r\n    AcceptRideComponent,\r\n    CommentDetailsComponent,\r\n    AddCommentComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey:'AIzaSyBrjeABCsOwW1rhi7eW6_b_fWF8OK2HeiA'\r\n    })\r\n  ],\r\n  providers: [AuthService, CookieService, ExternalApisDataService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<h3 *ngIf=\\\"!editMode\\\">New car</h3>\\r\\n<h3 *ngIf=\\\"editMode\\\">Edit {{car?.CarNumber}}</h3>\\r\\n<form [formGroup]=\\\"carForm\\\" (submit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"registration\\\">Registration</label>\\r\\n    <input type=\\\"text\\\" id=\\\"registation\\\" formControlName=\\\"registration\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"year\\\">Year</label>\\r\\n    <input type=\\\"number\\\" id=\\\"year\\\" formControlName=\\\"year\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n  <select id=\\\"type\\\" formControlName=\\\"type\\\" class=\\\"form-control\\\">\\r\\n    <option value=0>Sedan</option>\\r\\n    <option value=1>Van</option>\\r\\n  </select>\\r\\n  <hr>\\r\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{editMode ? 'Edit' : 'Add'}}</button>\\r\\n</form>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ICar } from '../../../services/interfaces';\r\nimport { CarsDataService } from '../../../services/cars-data.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-car',\r\n  templateUrl: './add-car.component.html',\r\n  styleUrls: ['./add-car.component.css']\r\n})\r\nexport class AddCarComponent implements OnInit {\r\n\r\n  car: ICar;\r\n  editMode = false;\r\n  private id : number;\r\n  carForm :FormGroup;\r\n  constructor(private carsService: CarsDataService,\r\n              private route:ActivatedRoute,\r\n              private router:Router) {  }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe((params:Params) => {\r\n      this.id = +params['id'];\r\n      this.editMode = params['id'] != null;\r\n\r\n      if(!this.editMode){\r\n        this.carForm = new FormGroup({\r\n          registration: new FormControl(null),\r\n          year: new FormControl(null),\r\n          type: new FormControl(0),\r\n        });\r\n      }else{\r\n        this.carsService.getCarByNumber(this.id).subscribe((data:ICar) =>{\r\n          if(!data){\r\n            this.router.navigate(['/home','cars']);\r\n            return;\r\n          }\r\n          this.car = data;\r\n          this.carForm.patchValue({\r\n            'registration' : this.car['Registration'],\r\n            'year': this.car['Year'],\r\n            'type':this.car['CarType']\r\n          });\r\n        });\r\n        this.carForm = new FormGroup({\r\n          registration: new FormControl(),\r\n          year: new FormControl(),\r\n          type: new FormControl(),\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n    let c : ICar;\r\n    if(this.editMode){\r\n      c = {\r\n        carNumber : this.car['CarNumber'],\r\n        driver : this.car['Driver'],\r\n        carType : +this.carForm.value.type,\r\n        registration : this.carForm.value.registration,\r\n        year : +this.carForm.value.year\r\n      };\r\n      this.carsService.updateCar(c);\r\n      this.router.navigate(['../'], {relativeTo:this.route});\r\n    }else{\r\n      c = {\r\n        carNumber : null,\r\n        driver : null,\r\n        carType : +this.carForm.value.type,\r\n        registration : this.carForm.value.registration,\r\n        year : +this.carForm.value.year\r\n      }\r\n      this.carsService.addNewCar(c);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"p{\\r\\n    font-size: 20px\\r\\n}\"","module.exports = \"<h2>Details</h2>\\r\\n<div class=\\\"pull-left\\\">\\r\\n  <p class=\\\"list-group-item-text\\\">Registration: {{car?.Registration}}</p>\\r\\n  <p class=\\\"list-group-item-text\\\">Driver: {{car?.Driver}}</p>\\r\\n  <p class=\\\"list-group-item-text\\\">CarType: {{car?.CarType === 0 ? 'Sedan' : 'Van'}}</p>\\r\\n  <p class=\\\"list-group-item-text\\\">Year: {{car?.Year}}</p>\\r\\n</div>\\r\\n<div class=\\\"pull-right\\\">\\r\\n<a class=\\\"btn btn-primary\\\" (click)=\\\"onEdit()\\\">Edit</a>\\r\\n<a *ngIf=\\\"!car?.Driver\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onRemove()\\\">Remove</a>\\r\\n</div>\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { ICar, CarType } from '../../../services/interfaces';\r\nimport { Params, ActivatedRoute, Router } from '@angular/router';\r\nimport { CarsDataService } from '../../../services/cars-data.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-car-details',\r\n  templateUrl: './car-details.component.html',\r\n  styleUrls: ['./car-details.component.css']\r\n})\r\nexport class CarDetailsComponent implements OnInit, OnDestroy{\r\n\r\n  car:ICar = null;\r\n  private id : number;\r\n  private carSubscription : Subscription;\r\n  constructor(private route:ActivatedRoute,\r\n              private router:Router,\r\n              private carsService:CarsDataService) {}\r\n\r\n  ngOnInit() {\r\n    this.carSubscription = this.route.params.subscribe((params:Params) => {\r\n      this.id = +params['id'];\r\n      this.carSubscription = this.carsService.getCarByNumber(this.id).subscribe((car:ICar) =>{\r\n        if(!car){\r\n          this.router.navigate(['../'], {relativeTo:this.route});\r\n        }\r\n        this.car = car;\r\n      });\r\n    });\r\n  }\r\n  ngOnDestroy(){\r\n    this.carSubscription.unsubscribe();\r\n  }\r\n  onEdit(){\r\n    this.router.navigate(['../',this.car['CarNumber'],'edit'], {relativeTo:this.route});\r\n  }\r\n  onRemove(){\r\n    this.carsService.removeCar(this.car['CarNumber']);\r\n    this.router.navigate(['../'], {relativeTo: this.route})\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<a [routerLink]=\\\"[car.CarNumber]\\\" routerLinkActive=\\\"active\\\" style=\\\"cursor:pointer\\\" class=\\\"list-group-item clearfix\\\" >\\r\\n  <div class=\\\"pull-left\\\">\\r\\n      <h4 class=\\\"list-group-item-heading\\\">{{car.CarNumber}}</h4>\\r\\n  </div>\\r\\n</a>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ICar, CarType } from '../../../services/interfaces';\r\nimport { ActivatedRouteSnapshot, ActivatedRoute, Router, ROUTER_CONFIGURATION } from '@angular/router';\r\nimport { CarsDataService } from '../../../services/cars-data.service';\r\n\r\n@Component({\r\n  selector: 'app-car-item',\r\n  templateUrl: './car-item.component.html',\r\n  styleUrls: ['./car-item.component.css']\r\n})\r\nexport class CarItemComponent implements OnInit {\r\n\r\n  @Input() car:ICar;\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private carsService: CarsDataService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".pre-scrollable {\\r\\n    max-height: 400px;\\r\\n    overflow-y: scroll;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\" row well well-sm pre-scrollable\\\">\\r\\n  <div class=\\\"list-group\\\">\\r\\n  <app-car-item *ngFor=\\\"let car of cars\\\"\\r\\n  [car]=\\\"car\\\"></app-car-item>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ICar } from '../../../services/interfaces';\r\nimport { CarsDataService } from '../../../services/cars-data.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-cars-list',\r\n  templateUrl: './cars-list.component.html',\r\n  styleUrls: ['./cars-list.component.css']\r\n})\r\nexport class CarsListComponent implements OnInit, OnDestroy {\r\n  cars : ICar[] = [];\r\n  private carsSubscription : Subscription;\r\n  constructor(private carService: CarsDataService) { }\r\n\r\n  ngOnInit() {\r\n    this.carsSubscription = this.carService.getAllCars().subscribe((data) =>{\r\n      this.cars = data;\r\n      console.log(this.cars);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.carsSubscription.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-5\\\">\\r\\n    <h3>All cars</h3>\\r\\n    <app-cars-list></app-cars-list>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-5 col-md-offset-1\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-cars',\r\n  templateUrl: './cars.component.html',\r\n  styleUrls: ['./cars.component.css']\r\n})\r\nexport class CarsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  drivers works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-drivers',\r\n  templateUrl: './drivers.component.html',\r\n  styleUrls: ['./drivers.component.css']\r\n})\r\nexport class DriversComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  edit-driver works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-driver',\r\n  templateUrl: './edit-driver.component.html',\r\n  styleUrls: ['./edit-driver.component.css']\r\n})\r\nexport class EditDriverComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>We are currently not accepting new drivers!</h1>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-no-cars-error',\r\n  templateUrl: './no-cars-error.component.html',\r\n  styleUrls: ['./no-cars-error.component.css']\r\n})\r\nexport class NoCarsErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".active{\\r\\n    font-weight: bold\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" (click)=\\\"toogleCollapse()\\\">\\r\\n                    <span class=\\\"icon-bar\\\"></span>\\r\\n                    <span class=\\\"icon-bar\\\"></span>\\r\\n                    <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n            <a routerLink=\\\"/home\\\" class=\\\"navbar-brand\\\" style=\\\"cursor:pointer\\\">Taxi Service</a>\\r\\n        </div>\\r\\n        <div class=\\\"navbar-collapse collapse\\\" #responsiveNavbar collapse=\\\"navCollapsed\\\" >\\r\\n            <ul *ngIf=\\\"!userBlocked\\\" class=\\\"nav navbar-nav\\\">\\r\\n                <li routerLinkActive=\\\"active\\\" *ngIf=\\\"!userType || userType === 0\\\">\\r\\n                    <a routerLink=\\\"/login\\\" style=\\\"cursor: pointer;\\\">Login</a>\\r\\n                </li>\\r\\n                <li routerLinkActive=\\\"active\\\" class=\\\"dropdown\\\" appDropdown *ngIf=\\\"!userType || userType === 0\\\">\\r\\n                    <a class=\\\"dropdown-toggle\\\" role=\\\"button\\\" style=\\\"cursor: pointer;\\\" >Registration<span class=\\\"caret\\\"></span></a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li><a routerLink=\\\"/registration\\\" [queryParams]=\\\"{type: 'customer'}\\\" style=\\\"cursor: pointer;\\\">New Customer</a></li>\\r\\n                        <li><a routerLink=\\\"/registration\\\" [queryParams]=\\\"{type: 'driver'}\\\" style=\\\"cursor: pointer;\\\">New Driver</a></li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li class=\\\"dropdown\\\" appDropdown *ngIf=\\\"userType && userType !== 0\\\">\\r\\n                    <a class=\\\"dropdown-toggle\\\" role=\\\"button\\\" style=\\\"cursor: pointer;\\\" >Rides<span class=\\\"caret\\\"></span></a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li *ngIf=\\\"userType && userType !== 2\\\"><a [routerLink]=\\\"['/home','rides','new']\\\" style=\\\"cursor: pointer;\\\">Add New</a></li>\\r\\n                        <li><a [routerLink]=\\\"['/home','rides']\\\" style=\\\"cursor: pointer;\\\">All Rides</a></li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li class=\\\"dropdown\\\" appDropdown *ngIf=\\\"userType === 3\\\">\\r\\n                    <a class=\\\"dropdown-toggle\\\" role=\\\"button\\\" style=\\\"cursor: pointer;\\\" >Users<span class=\\\"caret\\\"></span></a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li><a style=\\\"cursor: pointer;\\\" [routerLink]=\\\"['/home','users']\\\" routerLinkActive=\\\"router-link-active\\\" >All Users</a></li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li class=\\\"dropdown\\\" appDropdown *ngIf=\\\"userType === 3\\\">\\r\\n                        <a class=\\\"dropdown-toggle\\\" role=\\\"button\\\" style=\\\"cursor: pointer;\\\" >Cars<span class=\\\"caret\\\"></span></a>\\r\\n                        <ul class=\\\"dropdown-menu\\\">\\r\\n                            <li><a [routerLink]=\\\"['/home','cars','new']\\\" style=\\\"cursor: pointer;\\\">Add New</a></li>\\r\\n                            <li><a [routerLink]=\\\"['/home','cars']\\\" style=\\\"cursor: pointer;\\\">All Cars</a></li>\\r\\n                        </ul>\\r\\n                    </li>\\r\\n            </ul>\\r\\n            <ul class=\\\"nav navbar-nav navbar-right\\\" *ngIf=\\\"userType && userType !== 0\\\">\\r\\n                <li class=\\\"dropdown\\\" appDropdown>\\r\\n                    <a class=\\\"dropdown-toggle\\\" role=\\\"button\\\" style=\\\"cursor: pointer;\\\" >Settings<span class=\\\"caret\\\"></span></a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li><a routerLink=\\\"/profile\\\" style=\\\"cursor: pointer;\\\">User Profile</a></li>\\r\\n                        <li><a routerLink=\\\"/password-change\\\" style=\\\"cursor: pointer;\\\">Change Password</a></li>\\r\\n                        <li *ngIf=\\\"userType && userType !== 3\\\" ><a style=\\\"cursor: pointer;\\\" (click)=\\\"onDeleteAccount()\\\">Delete Account</a></li>\\r\\n                        <li *ngIf=\\\"userType && userType === 2\\\"><a routerLink=\\\"/location\\\" style=\\\"cursor: pointer;\\\">Change Location</a></li>                        \\r\\n                        <li><a style=\\\"cursor: pointer;\\\" (click)=\\\"onLogout()\\\">Logout</a></li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\"","import { Component, OnInit, ElementRef, ViewChild, OnDestroy } from '@angular/core';\r\nimport { AuthService, User } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { Usertype } from '../../services/usertype.enum';\r\nimport { Subscriber, Subscription } from 'rxjs';\r\nimport { UsersService } from '../../services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  @ViewChild('responsiveNavbar') responsiveNavbar:ElementRef;\r\n  userType : Usertype = Usertype.Guest;\r\n  username : string = null;\r\n  userBlocked: boolean;\r\n  private userSubscription : Subscription;\r\n  constructor(private authService:AuthService,\r\n              private router:Router,\r\n              private usersService:UsersService) {}\r\n\r\n  ngOnInit() {\r\n      this.userType = this.authService.getUserType();\r\n      this.userSubscription = this.authService.userChanged\r\n      .subscribe((user:User)=>{\r\n        this.userType = user.usertype;\r\n        this.username = user.username;\r\n        this.userBlocked = user.blocked;\r\n      });\r\n      this.userBlocked = this.authService.isUserBlocked();\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.userSubscription.unsubscribe();\r\n  }\r\n  onLogout(){\r\n    this.authService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  onDeleteAccount(){\r\n    this.usersService.removeUser(this.authService.getCurrentUsername());\r\n  }\r\n\r\n  toogleCollapse(){\r\n    this.responsiveNavbar.nativeElement.classList.toggle('collapse');\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>Welcome {{username}} to NS Taxi service!</h2>\\r\\n<hr>\\r\\n<h4 *ngIf=\\\"userBlocked\\\" style=\\\"color: red\\\">We are sorry but you are blocked from our services.</h4>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  userBlocked = false;\r\n  username = '';\r\n  constructor(private authService:AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.userBlocked = this.authService.isUserBlocked()\r\n    this.username = this.authService.getCurrentUsername();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\r\\n      <form [formGroup]=\\\"loginForm\\\" (submit)=\\\"onLogin()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"username\\\">Username</label>\\r\\n          <input type=\\\"text\\\" id=\\\"username\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"password\\\">Password</label>\\r\\n          <input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <span *ngIf=\\\"failed\\\" class=\\\"help-block\\\">Invalid username or password!</span>\\r\\n        <button [disabled]=\\\"!loginForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\">Login</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm:FormGroup;\r\n  failed:boolean = false;\r\n\r\n  constructor(private router:Router,\r\n              private authSevice: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = new FormGroup({\r\n      'username' : new FormControl(null, Validators.required),\r\n      'password' : new FormControl(null, Validators.required),\r\n    });\r\n  }\r\n\r\n  onLogin(){\r\n    this.authSevice.authStatus.subscribe((ok:boolean)=>{\r\n      if(ok){\r\n        this.router.navigate(['/home','drives']);\r\n      }else{\r\n        this.failed = true;\r\n      }\r\n    });\r\n    const ok = this.authSevice.authenticateUser(this.loginForm.value['username'], this.loginForm.value['password']);\r\n    if(ok === true){\r\n      this.router.navigate(['/home','drives']);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<form *ngIf=\\\"!isDriver\\\" [formGroup]=\\\"acceptForm\\\" (submit)=\\\"onAccept()\\\">\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label for=\\\"driver\\\">Select Driver</label>\\r\\n  <select id=\\\"driver\\\" formControlName=\\\"driver\\\" class=\\\"form-control\\\">\\r\\n    <option *ngFor=\\\"let driver of drivers\\\" [value]=\\\"driver\\\">{{driver}}</option>\\r\\n  </select>\\r\\n</div>\\r\\n<br>\\r\\n<span class=\\\"help-block\\\" *ngIf=\\\"noFreeDrivers\\\">No free drivers!</span>\\r\\n<button [disabled]=\\\"!acceptForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\">Accept</button>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Usertype } from '../../../services/usertype.enum';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { RidesService } from '../../../services/rides.service';\r\nimport { IRide, RideStatus, IDriver, ILocation } from '../../../services/interfaces';\r\nimport { UsersService } from '../../../services/users.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-accept-ride',\r\n  templateUrl: './accept-ride.component.html',\r\n  styleUrls: ['./accept-ride.component.css']\r\n})\r\nexport class AcceptRideComponent implements OnInit {\r\n\r\n  drivers : string[] = [];\r\n  isDriver = false;\r\n  noFreeDrivers = true;\r\n  rideId:number;\r\n  ride: IRide;\r\n  destination:boolean;\r\n  acceptForm = new FormGroup({\r\n    driver : new FormControl(null, Validators.required)\r\n  });\r\n\r\n  constructor(private authService:AuthService,\r\n              private userService:UsersService,\r\n              private ridesService:RidesService,\r\n              private route:ActivatedRoute,\r\n              private router:Router) { }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.route.params.subscribe((params:Params) =>{\r\n      this.rideId = params.id;\r\n    });\r\n\r\n    this.route.queryParams.subscribe((params:Params) =>{\r\n      this.destination = (params.destination !== null && params.destination !== undefined);\r\n    })\r\n\r\n    this.isDriver = this.authService.getUserType() === Usertype.Driver;\r\n    if(this.isDriver){\r\n      this.ridesService.acceptRide(null, this.rideId)\r\n      .subscribe(\r\n        ok =>{\r\n          console.log('ok');\r\n        }\r\n      )\r\n    }else{\r\n      this.ridesService.getRideById(this.rideId).subscribe(\r\n        (data : IRide) =>{\r\n          this.ride = data;\r\n          this.populateDrivers();\r\n        }\r\n      )\r\n      this.onAccept();\r\n    }\r\n  }\r\n\r\n  onAccept(){\r\n    if(!this.isDriver){\r\n        this.ridesService.acceptRide(this.acceptForm.value.driver, this.rideId).subscribe(\r\n          ok =>{\r\n            this.router.navigate(['../'], {relativeTo:this.route});\r\n          } \r\n        ); \r\n    }else{\r\n      this.ridesService.acceptRide(null, this.rideId).subscribe(\r\n       ok =>{\r\n         this.router.navigate(['../'], {relativeTo:this.route});\r\n       } \r\n      );      \r\n    }\r\n  }\r\n\r\n  private populateDrivers(){\r\n    this.userService.getAllDrivers()\r\n    .subscribe(\r\n      (data:IDriver[]) =>{\r\n        let tmpDrivers: {username:string,distance:number}[] = [];\r\n        let Filter = data.filter(x => {return x.cartype == this.ride.CarType && x.Free});\r\n        Filter.forEach((driver) =>{\r\n          const driverDistance = {\r\n            username: driver.username,\r\n            distance: this.getDriverDistance(driver.location.lat, driver.location.lng)\r\n          }\r\n          tmpDrivers.push(driverDistance);\r\n        });\r\n        tmpDrivers = tmpDrivers.sort((a,b) =>{\r\n          return a.distance - b.distance;\r\n        })\r\n        this.drivers = tmpDrivers.map(x => x.username).slice(0,4);\r\n        console.log(this.drivers);\r\n      },\r\n      error =>{\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  getDriverDistance(lat:number, lng:number){\r\n    let dlat = Math.pow((this.ride.Location.lat - lat),2);\r\n    let dlng = Math.pow((this.ride.Location.lng - lng),2);\r\n    return Math.sqrt(dlat + dlng); \r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"commentForm\\\" (submit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"description\\\">Description</label>\\r\\n    <br>\\r\\n    <textarea id=\\\"description\\\" formControlName=\\\"description\\\"></textarea>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"rate\\\">Rating *</label>\\r\\n    <select id=\\\"rate\\\" formControlName=\\\"rate\\\" class=\\\"form-control\\\">\\r\\n      <option value=\\\"1\\\">1</option>\\r\\n      <option value=\\\"2\\\">2</option>\\r\\n      <option value=\\\"3\\\">3</option>\\r\\n      <option value=\\\"4\\\">4</option>\\r\\n      <option value=\\\"5\\\">5</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <br>\\r\\n  <span class=\\\"help-block\\\" class=\\\"\\\">Fields marked with * are required.</span>\\r\\n  <button [disabled]=\\\"!commentForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { IComment } from '../../../services/interfaces';\r\nimport { RidesService } from '../../../services/rides.service';\r\n\r\n@Component({\r\n  selector: 'app-add-comment',\r\n  templateUrl: './add-comment.component.html',\r\n  styleUrls: ['./add-comment.component.css']\r\n})\r\nexport class AddCommentComponent implements OnInit {\r\n\r\n  commentForm: FormGroup = new FormGroup(\r\n    {\r\n      description: new FormControl(null, Validators.required),\r\n      rate: new FormControl(null)\r\n    }\r\n  );\r\n  rideId:number;\r\n  constructor(private route:ActivatedRoute,\r\n              private router:Router,\r\n              private ridesService:RidesService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(\r\n      (params:Params) =>{\r\n        this.rideId = params['id'];\r\n        if(!this.rideId){\r\n          this.router.navigate(['/home/rides']);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit(){\r\n    const comment : IComment = {\r\n      time: null,\r\n      rating: this.commentForm.value.rate,\r\n      description: this.commentForm.value.description,\r\n      rideid: this.rideId\r\n    }\r\n    console.log(comment);\r\n    this.ridesService.postComment(comment).subscribe(\r\n      ok =>{\r\n        this.router.navigate(['../'], {relativeTo:this.route});\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h4>Comment</h4>\\r\\n<div *ngIf=\\\"comment\\\" class=\\\"pull-left\\\">\\r\\n  <p>Description: {{comment.description}}</p>\\r\\n  <p>Rating: {{comment.rating}}</p>\\r\\n  <p>Post time: {{comment.time}}</p>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { IComment } from '../../../services/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-comment-details',\r\n  templateUrl: './comment-details.component.html',\r\n  styleUrls: ['./comment-details.component.css']\r\n})\r\nexport class CommentDetailsComponent implements OnInit {\r\n\r\n  @Input() comment : IComment;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"agm-map{\\r\\n    height: 300px;\\r\\n}\"","module.exports = \"<h3 *ngIf=\\\"!editMode\\\">New ride</h3>\\r\\n<h3 *ngIf=\\\"editMode\\\">Edit ride</h3>\\r\\n\\r\\n<!--Google maps component-->\\r\\n<agm-map [zoom]=\\\"zoom\\\" [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" (mapClick)=\\\"onChoseLocation($event)\\\">\\r\\n  <agm-marker *ngIf=\\\"chosen\\\" [longitude]=\\\"marker.lng\\\" [latitude]=\\\"marker.lat\\\" [markerDraggable]=\\\"draggable\\\" (dragEnd)=\\\"onMarkerDrag($event)\\\"></agm-marker>\\r\\n</agm-map>\\r\\n\\r\\n<form [formGroup]=\\\"rideForm\\\" (submit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"address\\\">Address</label>\\r\\n    <input type=\\\"text\\\" id=\\\"address\\\" formControlName=\\\"address\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n  <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"onCheckAddress()\\\">Check Address</button>\\r\\n  <div *ngIf=\\\"userType !== 2\\\" class=\\\"form-group\\\">\\r\\n    <label for=\\\"cartype\\\">Car type</label>\\r\\n    <select id=\\\"type\\\" formControlName=\\\"cartype\\\" class=\\\"form-control\\\">\\r\\n      <option value=0>Sedan</option>\\r\\n      <option value=1>Van</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"userType === 3\\\" class=\\\"form-group\\\">\\r\\n    <label for=\\\"driver\\\">Driver</label>\\r\\n    <select id=\\\"type\\\" formControlName=\\\"cartype\\\" class=\\\"form-control\\\">\\r\\n      <option *ngFor=\\\"let driver of availableDrivers\\\" [value]=\\\"driver\\\">{{driver}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"destination\\\" class=\\\"form-group\\\">\\r\\n    <label for=\\\"fare\\\">Fare</label>\\r\\n    <input type=\\\"number\\\" id=\\\"fare\\\" formControlName=\\\"fare\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n  <hr>\\r\\n  <button *ngIf=\\\"userType !== 2\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{editMode ? 'Edit' : 'Add'}}</button>\\r\\n  <button *ngIf=\\\"userType === 2\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!rideForm.valid\\\">Change</button>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { RidesService } from '../../../services/rides.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ExternalApisDataService } from '../../../services/external-apis-data.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { IRide, RideStatus, IRideRequest, IDriver, ILocation } from '../../../services/interfaces';\r\nimport { stringify } from 'querystring';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Usertype } from '../../../services/usertype.enum';\r\nimport { UsersService } from '../../../services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-new-ride',\r\n  templateUrl: './new-ride.component.html',\r\n  styleUrls: ['./new-ride.component.css']\r\n})\r\nexport class NewRideComponent implements OnInit {\r\n\r\n  rideForm:FormGroup;\r\n  editMode = false;\r\n  isDispatcher = false;\r\n  userType : Usertype;\r\n  availableDrivers : string[] = [];\r\n\r\n  //destination set\r\n  destination = false;\r\n  rideId:number;\r\n  //google maps specific\r\n  latitude = 45.260656;\r\n  longitude = 19.832157;\r\n  marker:IMarker = {lat:null, lng:null};\r\n  zoom = 14;\r\n  chosen = false;\r\n  draggable = true;\r\n  error = false;\r\n\r\n  constructor(private ridesService:RidesService,\r\n              private userService:UsersService,\r\n              private route:ActivatedRoute,\r\n              private router:Router,\r\n              private apisServices:ExternalApisDataService,\r\n              private http:HttpClient,\r\n              private authService:AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.rideForm = new FormGroup({\r\n      address: new FormControl(null, Validators.required),\r\n      cartype: new FormControl(0),\r\n      driver: new FormControl(null),\r\n      fare: new FormControl(Validators.required,Validators.min(0))\r\n    });\r\n    this.isDispatcher = this.authService.getUserType() === Usertype.Dispatcher;\r\n    this.userType = this.authService.getUserType();\r\n    \r\n    this.rideId = this.route.snapshot.queryParams['id'];\r\n    this.destination = this.route.snapshot.queryParams['destination'];\r\n    console.log(this.rideId);\r\n    console.log(this.destination);\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.userType === Usertype.Driver){\r\n      if(this.destination){\r\n        const location : ILocation = {\r\n          address: this.rideForm.value.address,\r\n          lat: this.marker.lat,\r\n          lng: this.marker.lng\r\n        }\r\n        console.log(location);\r\n        this.ridesService.finishRide(location, this.rideId, this.rideForm.value.fare).subscribe(\r\n          ok => {\r\n            this.router.navigate(['../../'], {relativeTo:this.route});\r\n          }\r\n        );\r\n      }else\r\n      {\r\n        const location : ILocation = {\r\n          address: this.rideForm.value.address,\r\n          lat: this.marker.lat,\r\n          lng: this.marker.lng\r\n        }\r\n        this.userService.changeDriverLocation(location)\r\n        .subscribe(\r\n          ok =>{ this.router.navigate(['/home','rides']), {relativeTo: this.route} },\r\n          error => {console.log(error)}\r\n        );\r\n      }\r\n    }\r\n    else{\r\n      if(!this.editMode){\r\n        let newRide : IRideRequest = {\r\n          location : {\r\n            address: this.rideForm.value.address,\r\n            lat: this.marker.lat,\r\n            lng: this.marker.lng\r\n          },\r\n          destination: null,\r\n          driver: this.rideForm.value.driver,\r\n          fare: 0,\r\n          cartype: this.rideForm.value.cartype,\r\n          rideid:null\r\n        }\r\n        console.log(newRide);\r\n        this.ridesService.newRide(newRide)\r\n        .subscribe(\r\n          ok =>{this.router.navigate([\"../\"], {relativeTo:this.route})},\r\n          error =>{\r\n            if(error.status === 403 || error.status === 401){\r\n              this.authService.logout();\r\n            }\r\n            console.log(error);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private populateDrivers(){\r\n    this.userService.getAllDrivers()\r\n    .subscribe(\r\n      (data:IDriver[]) =>{\r\n        let tmpDrivers: {username:string,distance:number}[] = [];\r\n        let carFilter = data.filter(x => {return x.cartype == this.rideForm.value.cartype && x.Free});\r\n        console.log(carFilter);\r\n        carFilter.forEach((driver) =>{\r\n          const driverDistance = {\r\n            username: driver.username,\r\n            distance: this.getDriverDistance(driver.location.lat, driver.location.lng)\r\n          }\r\n          tmpDrivers.push(driverDistance);\r\n        });\r\n        tmpDrivers = tmpDrivers.sort((a,b) =>{\r\n          return a.distance - b.distance;\r\n        })\r\n        this.availableDrivers = tmpDrivers.map(x => x.username).slice(0,4);\r\n        this.rideForm.patchValue({\r\n          'driver':this.availableDrivers[0]\r\n        })\r\n      },\r\n      error =>{\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  onMarkerDrag(event){\r\n    this.marker.lat = event.coords.lat;\r\n    this.marker.lng = event.coords.lng;\r\n    this.getAddressFromLocation();\r\n  }\r\n\r\n  onChoseLocation(event){\r\n    this.marker.lat = event.coords.lat;\r\n    this.marker.lng = event.coords.lng;\r\n    this.chosen = true;\r\n    this.populateDrivers();\r\n    this.getAddressFromLocation();\r\n  }\r\n\r\n  getDriverDistance(lat:number, lng:number){\r\n    let dlat = Math.pow((this.marker.lat - lat),2);\r\n    let dlng = Math.pow((this.marker.lng - lng),2);\r\n    return Math.sqrt(dlat + dlng); \r\n  }\r\n\r\n  getAddressFromLocation(){\r\n    //here maps reverse geocoding api\r\n    let requestString = 'https://reverse.geocoder.cit.api.here.com/6.2/reversegeocode.json?prox='+this.marker.lat+'%2C'+this.marker.lng+'%2C250&mode=retrieveAddresses&maxresults=1&gen=8&app_id='+this.apisServices.getHereAppId()+'&app_code='+this.apisServices.getHereAppCode()+'&language=en-US';\r\n    this.http.get(requestString).subscribe((response) =>{\r\n      const address = response['Response']['View'][0]['Result'][0]['Location']['Address']['Label'];\r\n      this.rideForm.patchValue({address: address});\r\n    });\r\n  }\r\n\r\n  getLocationFromAddres(){\r\n    //here maps geocoding api\r\n    let requestString = 'https://geocoder.cit.api.here.com/6.2/geocode.json?searchtext='+ this.rideForm.value.address +'&app_id='+this.apisServices.getHereAppId()+'&app_code='+this.apisServices.getHereAppCode()+'&gen=8';\r\n    const headers = new HttpHeaders();\r\n    headers.set('Accept-Language', 'en-US');\r\n    this.http.get(requestString, {headers:headers}).subscribe((response) =>{\r\n      const data : object[] = response['Response']['View'];\r\n      if(data.length === 0){\r\n        this.error = true;\r\n      }else{\r\n        this.error = false;\r\n        const location = data[0]['Result'][0]['Location']['NavigationPosition'][0];\r\n        this.marker.lat = location['Latitude'];\r\n        this.marker.lng = location['Longitude'];\r\n        this.chosen = true;\r\n        //center map over marker for easier user orientation\r\n        this.latitude = this.marker.lat;\r\n        this.longitude = this.marker.lng;\r\n      }\r\n    })\r\n  }\r\n\r\n  onCheckAddress(event){\r\n    this.getLocationFromAddres();\r\n  }\r\n}\r\n\r\ninterface IMarker{\r\n  lat:number,\r\n  lng:number\r\n}\r\n\r\n","module.exports = \".help-block{\\r\\n    color: red;\\r\\n    font-size: 20px;\\r\\n}\\r\\n\\r\\np{\\r\\n    font-size: 13px\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <h2>Details</h2>\\r\\n  <div *ngIf=\\\"ride\\\" class=\\\"pull-left\\\">\\r\\n    <p class=\\\"list-group-item-text\\\" >Pickup location: {{ride.Location?.address}}</p>\\r\\n    <p *ngIf=\\\"ride.Destination\\\" class=\\\"list-group-item-text\\\">Destination : {{ride.Destination?.address}}</p>\\r\\n    <p class=\\\"list-group-item-text\\\">Created on: {{ride.Time}}</p>\\r\\n    <p class=\\\"list-group-item-text\\\">Status: {{rideStatus}}</p>\\r\\n    <p *ngIf=\\\"ride.Customer\\\" class=\\\"list-group-item-text\\\">Customer: {{ride.Customer}}</p>\\r\\n    <p class=\\\"list-group-item-text\\\">Driver: {{ride.Driver}}</p>\\r\\n    <p *ngIf=\\\"ride.Dispatcher\\\" class=\\\"list-group-item-text\\\">Dispatcher: {{ride.Dispatcher}}</p>\\r\\n    <p *ngIf=\\\"ride.Fare !== 0\\\" class=\\\"list-group-item-text\\\">Fare: {{ride.Fare}}</p>\\r\\n    <app-comment-details *ngIf=\\\"ride && ride.comment\\\" [comment]=\\\"ride.comment\\\"></app-comment-details>\\r\\n    <span class=\\\"help-block\\\" *ngIf=\\\"cancelFailed\\\">Failed to cancel ride, no longer in waiting.</span>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"pull-right\\\">\\r\\n    <a *ngIf=\\\"(userType === 3 || userType === 2) && ride.Status === 2 || (userType === 2 && driverFree && ride.Status === 2)\\\" [routerLink]=\\\"['accept']\\\" class=\\\"btn btn-success\\\">Accept</a>\\r\\n    <button *ngIf=\\\"userType === 2 && (ride.Status === 1 || ride.Status === 3)\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onFailed()\\\">Failed</button>\\r\\n    <button *ngIf=\\\"userType === 2 && (ride.Status === 1 || ride.Status === 3)\\\" class=\\\"btn btn-success\\\" (click)=\\\"onSuccess()\\\">Success</button>\\r\\n    <button *ngIf=\\\"userType === 1 && ride.Status === 5 && !ride.Comment\\\"  class=\\\"btn btn-primary\\\" (click)=\\\"onComment()\\\">Comment</button>  \\r\\n    <button *ngIf=\\\"userType === 1 && ride.Status === 2\\\"  class=\\\"btn btn-danger\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-comment-details class=\\\"row pull-left\\\" *ngIf=\\\"ride.Comment\\\" [comment]=\\\"ride.Comment\\\"></app-comment-details>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { RidesService } from '../../../services/rides.service';\r\nimport { IRide, RideStatus } from '../../../services/interfaces';\r\nimport { Usertype } from '../../../services/usertype.enum';\r\nimport { AuthService } from '../../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-ride-details',\r\n  templateUrl: './ride-details.component.html',\r\n  styleUrls: ['./ride-details.component.css']\r\n})\r\nexport class RideDetailsComponent implements OnInit {\r\n\r\n  private id : number;\r\n  ride : IRide;\r\n  rideStatus: string;\r\n  userType: Usertype;\r\n\r\n  cancelFailed = false;\r\n\r\n  driverFree = true;\r\n\r\n  constructor(private route:ActivatedRoute,\r\n              private router:Router,\r\n              private ridesService:RidesService,\r\n              private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe((params:Params) => {\r\n      this.id = +params['id'];\r\n      this.ridesService.getRideById(this.id).subscribe(\r\n       (data : IRide) =>{\r\n        this.ride = data;\r\n        switch(this.ride.Status){\r\n          case RideStatus.waiting : this.rideStatus = 'Waiting';break;\r\n          case RideStatus.accepted : this.rideStatus = 'Accepted';break;\r\n          case RideStatus.cancelled : this.rideStatus = 'Cancelled';break;\r\n          case RideStatus.sucessful : this.rideStatus = 'Succesful';break;\r\n          case RideStatus.failed : this.rideStatus = 'Failed';break;\r\n          case RideStatus.processed : this.rideStatus = 'Processed';break;\r\n          case RideStatus.ordered : this.rideStatus = 'Ordered';break;\r\n        }\r\n       },\r\n       error =>{\r\n         console.log(error);\r\n         this.router.navigate(['../'], {relativeTo:this.route});\r\n       }\r\n      );\r\n      \r\n    });\r\n    this.userType = this.authService.getUserType();\r\n    this.ridesService.ridesChanged.subscribe((rides:IRide[]) =>{\r\n      this.updateDriverStatus();\r\n    });\r\n    if(this.userType === Usertype.Driver){\r\n      this.updateDriverStatus();\r\n    }\r\n  }\r\n\r\n  private updateDriverStatus() {\r\n    this.ridesService.getAllRidesForUser()\r\n    .subscribe(\r\n      (data : IRide[]) =>{\r\n        let driverBusy = false;\r\n        if(data.length !== 0){\r\n          data.forEach((ride: IRide) => {\r\n            if (ride.Status !== RideStatus.waiting && ride.Status !== RideStatus.sucessful && ride.Status !== RideStatus.failed) {\r\n              driverBusy = true;\r\n            }\r\n          });\r\n        }\r\n        this.driverFree = !driverBusy;\r\n      }\r\n    );\r\n  }\r\n\r\n  onCancel(){\r\n    this.ridesService.cancelRide(this.ride.Id).subscribe(\r\n      ok =>{ \r\n        this.router.navigate(['comment'], {relativeTo: this.route});\r\n      },\r\n      error =>{\r\n        this.cancelFailed = true;\r\n        setTimeout(() =>{\r\n          this.router.navigate(['../'], {relativeTo: this.route});\r\n        },2000);\r\n      }\r\n    )\r\n  }\r\n\r\n  onSuccess(){\r\n    this.router.navigate(['../','new'], {relativeTo:this.route, queryParams:{id:this.ride.Id,destination:true}})\r\n  }\r\n  onFailed(){\r\n    this.ridesService.failRide(this.ride.Id).subscribe(\r\n      ok =>{\r\n        this.router.navigate(['comment'], {relativeTo: this.route});\r\n      }\r\n    )\r\n  }\r\n\r\n  onComment(){\r\n    this.router.navigate(['comment'], {relativeTo:this.route});\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<a [routerLink]=\\\"[ride.Id]\\\" routerLinkActive=\\\"active\\\" style=\\\"cursor:pointer\\\" class=\\\"list-group-item clearfix\\\" >\\r\\n  <div class=\\\"pull-left\\\">\\r\\n      <h4 class=\\\"list-group-item-heading\\\">{{ride.Location?.address}}</h4>\\r\\n      <h4 class=\\\"list-group-item-heading\\\">{{ride.Time}}</h4>\\r\\n  </div>\\r\\n</a>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { IRide } from '../../../services/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-ride-item',\r\n  templateUrl: './ride-item.component.html',\r\n  styleUrls: ['./ride-item.component.css']\r\n})\r\nexport class RideItemComponent implements OnInit {\r\n\r\n  @Input() ride:IRide;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- <div class=\\\"row\\\">\\r\\n<h3 *ngIf=\\\"waiting\\\">Waiting rides</h3>\\r\\n<h3 *ngIf=\\\"!waiting\\\">All rides</h3>\\r\\n</div> -->\\r\\n<div *ngIf=\\\"userType === 3\\\" class=\\\"row\\\">\\r\\n  <button *ngIf=\\\"!waiting && myrides\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onWaitingRides()\\\">My Rides</button>\\r\\n  <button *ngIf=\\\"waiting && !myrides\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onAllRides()\\\">Waiting</button>\\r\\n  <button *ngIf=\\\"!waiting && !myrides\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onMyRides()\\\">All Rides</button>\\r\\n</div>\\r\\n<div *ngIf=\\\"userType === 2\\\" class=\\\"row\\\">\\r\\n  <button *ngIf=\\\"!waiting\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onWaitingRides()\\\">My Rides</button>\\r\\n  <button *ngIf=\\\"waiting\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onMyRides()\\\">Waiting</button>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<div class=\\\" row well well-sm pre-scrollable\\\">\\r\\n  <div class=\\\"list-group\\\">\\r\\n  <app-ride-item *ngFor=\\\"let ride of rides\\\"\\r\\n  [ride]=\\\"ride\\\"></app-ride-item>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { IRide, RideStatus } from '../../../services/interfaces';\r\nimport { Subscription } from 'rxjs';\r\nimport { RidesService } from '../../../services/rides.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Usertype } from '../../../services/usertype.enum';\r\n\r\n@Component({\r\n  selector: 'app-rides-list',\r\n  templateUrl: './rides-list.component.html',\r\n  styleUrls: ['./rides-list.component.css']\r\n})\r\nexport class RidesListComponent implements OnInit, OnDestroy {\r\n\r\n  rides: IRide[] = [];\r\n  userType:Usertype;\r\n  private ridesSubscription = new Subscription();\r\n  waiting = false;\r\n  myrides = false;\r\n  private interval;\r\n  constructor(private ridesService: RidesService,\r\n              private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.userType = this.authService.getUserType();\r\n    this.ridesSubscription = this.ridesService.ridesChanged.subscribe((rides:IRide[]) =>{\r\n      this.rides = rides;\r\n    });\r\n    this.interval = setInterval(() =>{\r\n      this.onMyRides()\r\n    },10000);\r\n    this.onMyRides();\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.ridesSubscription.unsubscribe();\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  onAllRides(){\r\n    this.waiting = false;\r\n    this.myrides = false;\r\n    this.ridesService.getAllRides().subscribe(\r\n      (data:IRide[]) =>{\r\n        this.rides = data;\r\n      },\r\n      error =>{\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  onWaitingRides(){\r\n    this.waiting = true;\r\n    this.myrides = false;\r\n    this.ridesService.getAllRides()\r\n    .subscribe(\r\n      (data:IRide[])=>{\r\n        this.rides = [];\r\n        data.forEach(ride =>{\r\n          if(ride.Status == RideStatus.waiting){\r\n            this.rides.push(ride);\r\n          }\r\n        });\r\n      },\r\n      error =>{\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  onMyRides(){\r\n    this.myrides = true;\r\n    this.waiting = false;\r\n    this.ridesService.getAllRidesForUser()\r\n    .subscribe(\r\n      (data:IRide[]) =>{\r\n        this.rides = data;\r\n      },\r\n      error =>{\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-5\\\">\\r\\n    <app-rides-list></app-rides-list>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-5 col-md-offset-1\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rides',\r\n  templateUrl: './rides.component.html',\r\n  styleUrls: ['./rides.component.css']\r\n})\r\nexport class RidesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"input.ng-touched.ng-invalid{\\r\\n    border: 1px red solid\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\r\\n      <form [formGroup]=\\\"registrationForm\\\" (submit)=\\\"onEdit()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"email\\\">Email *</label>\\r\\n          <input type=\\\"email\\\" id=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\">\\r\\n          <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('email').invalid && registrationForm.get('email').touched && registrationForm.get('email').errors['required']\\\">This fields is required</span>\\r\\n          <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('email').invalid && registrationForm.get('email').touched && registrationForm.get('email').errors['email']\\\">Invalid email format</span>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Name</label>\\r\\n          <input type=\\\"text\\\" id=\\\"name\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"lastname\\\">Lastname</label>\\r\\n          <input type=\\\"text\\\" id=\\\"lastname\\\" formControlName=\\\"lastname\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"jmbg\\\">JMBG</label>\\r\\n          <input type=\\\"text\\\" id=\\\"jmbg\\\" formControlName=\\\"jmbg\\\" class=\\\"form-control\\\">\\r\\n          <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('jmbg').invalid && registrationForm.get('jmbg').touched && registrationForm.get('jmbg').errors['jmbgInvalid']\\\">Invalid JMBG</span>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"phone\\\">Phone *</label>\\r\\n          <input type=\\\"text\\\" id=\\\"phone\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\">\\r\\n          <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('phone').invalid && registrationForm.get('phone').touched && registrationForm.get('phone').errors['required']\\\">This fields is required.</span>\\r\\n          <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('phone').invalid && registrationForm.get('phone').touched && registrationForm.get('phone').errors['pattern']\\\">Phone can contain only numbers.</span>\\r\\n        </div>\\r\\n        <!--For future use if driver wants to change car-->\\r\\n        <!-- <div class=\\\"form-group\\\" *ngIf=\\\"isDriver\\\">\\r\\n          <label for=\\\"carNumber\\\">Car Number</label>\\r\\n          <select id=\\\"carNumber\\\" formControlName=\\\"carNumber\\\" class=\\\"form-control\\\">\\r\\n            <option *ngFor=\\\"let car of freeCars\\\" [value]=\\\"car.carNumber\\\">{{car.carNumber}}</option>\\r\\n          </select>\\r\\n        </div> -->\\r\\n        <br>\\r\\n        <span class=\\\"help-block\\\">Fields marked with * are required.</span>\\r\\n        <button [disabled]=\\\"!registrationForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary pull-left\\\">Confirm</button>\\r\\n        <a routerLink=\\\"/profile\\\" class=\\\"btn btn-danger pull\\\">Cancel</a>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UsersService } from '../../../services/users.service';\r\nimport { INewUser } from '../../../services/interfaces';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  templateUrl: './edit-user.component.html',\r\n  styleUrls: ['./edit-user.component.css']\r\n})\r\nexport class EditUserComponent implements OnInit {\r\n\r\n  editUser:INewUser;\r\n  registrationForm:FormGroup;\r\n  constructor(private usersService:UsersService,\r\n              private authService:AuthService,\r\n              private router:Router) { }\r\n\r\n  ngOnInit() {\r\n    const username = this.authService.getCurrentUsername();\r\n    this.usersService.getUser(username).subscribe(\r\n     (data:INewUser) => {\r\n       this.editUser = data;\r\n      this.registrationForm.patchValue({\r\n        'email':this.editUser.email,\r\n        'username':this.editUser.username,\r\n        'name':this.editUser.name,\r\n        'lastname':this.editUser.lastname,\r\n        'jmbg':this.editUser.jmbg,\r\n        'phone':this.editUser.phone,\r\n      });\r\n     },\r\n     error => console.log(error) \r\n    );\r\n\r\n    this.registrationForm = new FormGroup({\r\n      email: new FormControl(null, [Validators.required, Validators.email]),\r\n      name: new FormControl(null),\r\n      lastname: new FormControl(null),\r\n      jmbg: new FormControl(null, [Validators.pattern('[0-9]{13,13}'), this.jmbgValidator.bind(this)]),\r\n      phone: new FormControl(null, [Validators.required,Validators.pattern('[0-9]*')]),\r\n      //feature if driver can change cars\r\n      //carNumber: new FormControl(null),\r\n    });\r\n  }\r\n\r\n  onEdit(){\r\n    let editUser:INewUser = {\r\n      username:this.editUser.username,\r\n      password:this.registrationForm.value['password'],\r\n      email:this.registrationForm.value['email'],\r\n      name:this.registrationForm.value['name'],\r\n      lastname:this.registrationForm.value['lastname'],\r\n      jmbg:this.registrationForm.value['jmbg'],\r\n      phone:this.registrationForm.value['phone'],\r\n      //in future if driver can change car, change to read from form\r\n      CarNumber: this.editUser.CarNumber,\r\n      userType : this.authService.getUserType(),\r\n      blocked: this.editUser.blocked\r\n    };\r\n\r\n    this.usersService.updateUser(editUser).subscribe(\r\n      ok =>{\r\n        this.router.navigate(['/profile']);\r\n      },\r\n      error => {console.log(error);}\r\n    );\r\n  }\r\n  jmbgValidator(control:FormControl) : {[s:string]:boolean}{\r\n    if(!this.checkJmbg(control.value)){\r\n      return {'jmbgInvalid':true};\r\n    }\r\n    return null;\r\n  }\r\n  private checkJmbg(jmbg : string) : boolean{\r\n    if(!jmbg){\r\n      return true;\r\n    }\r\n    let a = +jmbg[0];\r\n    let b = +jmbg[1];\r\n    let c = +jmbg[2];\r\n    let d = +jmbg[3];\r\n    let e = +jmbg[4];\r\n    let f = +jmbg[5];\r\n    let g = +jmbg[6];\r\n    let h = +jmbg[7];\r\n    let i = +jmbg[8];\r\n    let j = +jmbg[9];\r\n    let k = +jmbg[10];\r\n    let l = +jmbg[11];\r\n    let m = +jmbg[12];\r\n    const checksum = 11 - ((7*(a+g)+6*(b+h)+5*(c+i)+4*(d+j)+3*(e+k)+2*(f+l)) % 11);\r\n    if(m != checksum)\r\n      return false;\r\n    return true;\r\n  }\r\n\r\n}\r\n","module.exports = \"p{\\r\\n    font-size: 20px\\r\\n}\"","module.exports = \"<h2>Details</h2>\\r\\n<div class=\\\"list-group\\\">\\r\\n  <p>Name: {{user?.name}}</p>\\r\\n  <p>Lastname: {{user?.lastname}}</p>\\r\\n  <p>Username: {{user?.username}}</p>\\r\\n  <p>Email: {{user?.email}}</p>\\r\\n  <p>JMBG: {{user?.jmbg}}</p>\\r\\n  <p>Phone: {{user?.phone}}</p>\\r\\n  <p>Sex: {{user?.sex == 0 ? 'Male' : 'Female'}}</p>\\r\\n  <p *ngIf=\\\"user && user.userType && user.userType === 2\\\">Car number: {{user?.carId}}</p>\\r\\n</div>\\r\\n<hr>\\r\\n<div class=\\\"row\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"col-sm-2 btn btn-primary\\\" (click)=\\\"onUserChange()\\\">Edit</button>\\r\\n</div>\\r\\n<br>\\r\\n<div class=\\\"row\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"col-sm-2 btn btn-primary\\\" (click)=\\\"onPasswordChange()\\\">Change Password</button>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { UsersService } from '../../../services/users.service';\r\nimport { INewUser } from '../../../services/interfaces';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-full-user-details',\r\n  templateUrl: './full-user-details.component.html',\r\n  styleUrls: ['./full-user-details.component.css']\r\n})\r\nexport class FullUserDetailsComponent implements OnInit {\r\n\r\n  user : INewUser = {\r\n    name:null,\r\n    lastname:null,\r\n    blocked:null,\r\n    phone:null,\r\n    CarNumber:null,\r\n    email:null,\r\n    jmbg:null,\r\n    password:null,\r\n    username:null,\r\n    userType:null,\r\n  }\r\n  constructor(private authService:AuthService,\r\n              private usersService:UsersService,\r\n              private router:Router) { }\r\n\r\n  ngOnInit() {\r\n    const username = this.authService.getCurrentUsername();\r\n    this.usersService.getUser(username)\r\n    .subscribe(\r\n     (data:INewUser) => {\r\n        this.user = data;\r\n        console.log(data);\r\n     },\r\n     error => console.log(error), \r\n    );\r\n  }\r\n\r\n  onUserChange(){\r\n    this.router.navigate(['/edit-profile']);\r\n  }\r\n\r\n  onPasswordChange(){\r\n    this.router.navigate(['password-change']);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>Details</h2>\\r\\n<div class=\\\"pull-left\\\">\\r\\n  <p class=\\\"list-group-item-text\\\">Username: {{user.username}}</p>\\r\\n  <p class=\\\"list-group-item-text\\\">Email: {{user.email}}</p>\\r\\n  <p class=\\\"list-group-item-text\\\">Phone: {{user.phone}}</p>\\r\\n  <p class=\\\"list-group-item-text\\\">Type: {{userType}}</p>\\r\\n</div>\\r\\n<div class=\\\"pull-right\\\">\\r\\n<button *ngIf=\\\"!user.blocked\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onBlock()\\\">Block user</button>\\r\\n<button *ngIf=\\\"user.blocked\\\" class=\\\"btn btn-success\\\" (click)=\\\"onUnblock()\\\">Unblock user</button>\\r\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { UsersService } from '../../../../services/users.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { IBasicUser } from '../../../../services/interfaces';\r\nimport { Usertype } from '../../../../services/usertype.enum';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-user-details',\r\n  templateUrl: './user-details.component.html',\r\n  styleUrls: ['./user-details.component.css']\r\n})\r\nexport class UserDetailsComponent implements OnInit {\r\n\r\n  private username: string;\r\n  user :IBasicUser;\r\n  userType : string;\r\n\r\n  constructor(private usersService:UsersService,\r\n              private route:ActivatedRoute,\r\n              private router:Router) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe((params:Params) => {\r\n      this.username = params['username'];\r\n      if(!params['username']){\r\n        this.router.navigate(['../'], {relativeTo:this.route});\r\n      }\r\n\r\n      this.updateUser();\r\n      \r\n    });\r\n  }\r\n\r\n  onBlock(){\r\n    console.log(this.username);\r\n    this.usersService.blockUser(this.username)\r\n    .subscribe(\r\n     data => {this.updateUser()},\r\n     error => {\r\n       console.log(error);\r\n       this.router.navigate(['../'], {relativeTo: this.route});\r\n     } \r\n    );\r\n  }\r\n\r\n  onUnblock(){\r\n    console.log(this.username);\r\n    this.usersService.unblockUser(this.username)\r\n    .subscribe(\r\n      data => {this.updateUser()},\r\n      error => {\r\n        console.log(error);\r\n        this.router.navigate(['../'], {relativeTo: this.route});\r\n      } \r\n     );\r\n  }\r\n\r\n  private updateUser(){\r\n    this.usersService.getUserBasicInfo(this.username)\r\n    .subscribe(\r\n      (data:IBasicUser) => {\r\n        this.user = data;\r\n        switch(this.user.type){\r\n          case Usertype.Customer: this.userType = 'Customer';break;\r\n          case Usertype.Driver: this.userType = 'Driver';break;\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.router.navigate(['../'], {relativeTo:this.route});\r\n      }\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<a [routerLink]=\\\"[username]\\\" routerLinkActive=\\\"active\\\" style=\\\"cursor:pointer\\\" class=\\\"list-group-item clearfix\\\" >\\r\\n  <div class=\\\"pull-left\\\">\\r\\n      <h4 class=\\\"list-group-item-heading\\\">{{username}}</h4>\\r\\n  </div>\\r\\n</a>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { IBasicUser } from '../../../../services/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-user-item',\r\n  templateUrl: './user-item.component.html',\r\n  styleUrls: ['./user-item.component.css']\r\n})\r\nexport class UserItemComponent implements OnInit {\r\n\r\n  @Input() username : IBasicUser;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\" row well well-sm pre-scrollable\\\">\\r\\n  <div class=\\\"list-group\\\">\\r\\n  <app-user-item *ngFor=\\\"let username of users\\\"\\r\\n  [username]=\\\"username\\\"></app-user-item>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { UsersService } from '../../../../services/users.service';\r\nimport { IBasicUser } from '../../../../services/interfaces';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.css']\r\n})\r\nexport class UserListComponent implements OnInit, OnDestroy {\r\n\r\n  users : string[] = [];\r\n  private usersSub:Subscription;\r\n  constructor(private userService:UsersService) { }\r\n\r\n  ngOnInit() {\r\n    this.usersSub = this.userService.getAllUsersUsernames().subscribe((users) =>{\r\n      this.users = users;\r\n    });\r\n    this.userService.usersChanged.subscribe((changedUsersInfo) =>{\r\n      this.users = changedUsersInfo;\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.usersSub.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"input.ng-touched.ng-invalid{\\r\\n    border: 1px red solid\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\r\\n      <form [formGroup]=\\\"passwordChangeForm\\\" (submit)=\\\"onConfirm()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"password\\\">New Password</label>\\r\\n          <input type=\\\"text\\\" id=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"confirm\\\">Confirm Password</label>\\r\\n          <input type=\\\"text\\\" id=\\\"confirm\\\" formControlName=\\\"confirm\\\" class=\\\"form-control\\\">\\r\\n          <span *ngIf=\\\"!passwordChangeForm.get('confirm').valid && passwordChangeForm.get('confirm').touched && passwordChangeForm.get('confirm').errors['confirmError']\\\">Password must match!</span>\\r\\n        </div>\\r\\n        <br>\\r\\n        <button [disabled]=\\\"!passwordChangeForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\">Confirm</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { UsersService } from '../../../services/users.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-password-change',\r\n  templateUrl: './password-change.component.html',\r\n  styleUrls: ['./password-change.component.css']\r\n})\r\nexport class PasswordChangeComponent implements OnInit {\r\n\r\n  passwordChangeForm : FormGroup;\r\n\r\n  constructor(private usersService:UsersService,\r\n              private authService:AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.passwordChangeForm = new FormGroup({\r\n      password: new FormControl(null, Validators.required),\r\n      \r\n    });\r\n    //added like this since we need the first password field (and form) initialize\r\n    //when checking validity of password confirmation\r\n    this.passwordChangeForm.addControl('confirm', new FormControl(null, [Validators.required, this.confirmError.bind(this)]));\r\n  }\r\n\r\n  confirmError(control:FormControl) : {[s:string]:boolean}{\r\n    if(control.value !== this.passwordChangeForm.value.password){\r\n      return {'confirmError' : true};\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onConfirm(){\r\n    const username = this.authService.getCurrentUsername();\r\n    this.usersService.changePassword(username, this.passwordChangeForm.value.password)\r\n    .subscribe(\r\n      ok =>{\r\n        this.authService.logout();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    this.authService.logout();\r\n  }\r\n}\r\n","module.exports = \"input.ng-invalid.ng-touched{\\r\\n    border: 1px red solid\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\r\\n        <form [formGroup]=\\\"registrationForm\\\" (submit)=\\\"onRegistration()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"username\\\">Username *</label>\\r\\n            <input type=\\\"text\\\" id=\\\"username\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\">\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('username').touched && registrationForm.get('username').invalid\\\">This fields is required</span>\\r\\n            <span></span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password\\\">Password *</label>\\r\\n            <input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\">\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('password').touched && registrationForm.get('password').invalid\\\">This fields is required</span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"email\\\">Email *</label>\\r\\n            <input type=\\\"email\\\" id=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\">\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('email').invalid && registrationForm.get('email').touched && registrationForm.get('email').errors['required']\\\">This fields is required</span>\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('email').invalid && registrationForm.get('email').touched && registrationForm.get('email').errors['email']\\\">Invalid email format</span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Name</label>\\r\\n            <input type=\\\"text\\\" id=\\\"name\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"lastname\\\">Lastname</label>\\r\\n            <input type=\\\"text\\\" id=\\\"lastname\\\" formControlName=\\\"lastname\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"jmbg\\\">JMBG</label>\\r\\n            <input type=\\\"text\\\" id=\\\"jmbg\\\" formControlName=\\\"jmbg\\\" class=\\\"form-control\\\">\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('jmbg').invalid && registrationForm.get('jmbg').touched && registrationForm.get('jmbg').errors['jmbgInvalid']\\\">Invalid JMBG</span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"phone\\\">Phone *</label>\\r\\n            <input type=\\\"text\\\" id=\\\"phone\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\">\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('phone').invalid && registrationForm.get('phone').touched && registrationForm.get('phone').errors['required']\\\">This fields is required.</span>\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('phone').invalid && registrationForm.get('phone').touched && registrationForm.get('phone').errors['pattern']\\\">Phone can contain only numbers.</span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" >\\r\\n            <label for=\\\"sex\\\">Sex</label>\\r\\n            <select id=\\\"sex\\\" formControlName=\\\"sex\\\" class=\\\"form-control\\\">\\r\\n              <option value=0>Male</option>\\r\\n              <option value=1>Female</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"isDriver\\\">\\r\\n            <label for=\\\"carNumber\\\">Car Number *</label>\\r\\n            <select id=\\\"carNumber\\\" formControlName=\\\"carNumber\\\" class=\\\"form-control\\\">\\r\\n              <option *ngFor=\\\"let car of freeCars\\\" [value]=\\\"car.CarNumber\\\">{{car.CarNumber}} - {{car.CarType === 0 ? 'Sedan' : 'Van'}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <br>\\r\\n          <span class=\\\"help-block\\\">Fields marked with * are required.</span>\\r\\n          <button [disabled]=\\\"!registrationForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ICar, INewUser } from '../../../services/interfaces';\r\nimport { CarsDataService } from '../../../services/cars-data.service';\r\nimport { UsersService } from '../../../services/users.service';\r\nimport { Usertype } from '../../../services/usertype.enum';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit, OnDestroy {\r\n\r\n  registrationForm: FormGroup;\r\n  isDriver = false;\r\n  freeCars : ICar[] = [];\r\n  private typeSubscription:Subscription;\r\n  constructor(private route:ActivatedRoute,\r\n              private router:Router,\r\n              private carsService:CarsDataService,\r\n              private usersService:UsersService) { }\r\n\r\n  ngOnInit() {\r\n    //subscribe to query params to protect initialized component tampering trough query\r\n    this.typeSubscription = this.route.queryParams.subscribe((query) =>{\r\n      const type = query['type'];\r\n      if(!type || (type !== 'customer' && type !== 'driver')){\r\n        this.router.navigate([''], {relativeTo:this.route, queryParams:{type:'customer'}});\r\n      }else{\r\n        if(type === 'driver'){\r\n          this.isDriver = true;\r\n          this.carsService.carsChanged.subscribe((cars) =>{\r\n            cars.forEach((car) =>{\r\n              if(!car['Driver']){\r\n                this.freeCars.push(car);\r\n              }\r\n            })\r\n            if(this.freeCars.length == 0){\r\n              this.router.navigate(['/driver-registration-error']);\r\n            }\r\n          });\r\n          this.carsService.getAllCars();\r\n        }else{\r\n          this.freeCars = [];\r\n          this.isDriver = false;\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n    this.registrationForm = new FormGroup({\r\n      username: new FormControl(null, Validators.required),\r\n      password: new FormControl(null, Validators.required), \r\n      email: new FormControl(null, [Validators.required, Validators.email]),\r\n      name: new FormControl(null),\r\n      lastname: new FormControl(null),\r\n      jmbg: new FormControl(null, [Validators.pattern('[0-9]{13,13}'), this.jmbgValidator.bind(this)]),\r\n      phone: new FormControl(null, [Validators.required,Validators.pattern('[0-9]*')]),\r\n      sex: new FormControl(0)\r\n    });\r\n    if(this.isDriver){\r\n      this.registrationForm.addControl('carNumber', new FormControl(null, Validators.required));\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.typeSubscription.unsubscribe();\r\n  }\r\n  onRegistration(){\r\n    let newUser:INewUser = {\r\n      username:this.registrationForm.value['username'],\r\n      password:this.registrationForm.value['password'],\r\n      email:this.registrationForm.value['email'],\r\n      name:this.registrationForm.value['name'],\r\n      lastname:this.registrationForm.value['lastname'],\r\n      jmbg:this.registrationForm.value['jmbg'],\r\n      phone:this.registrationForm.value['phone'],\r\n      CarNumber:this.registrationForm.value['carNumber'],\r\n      userType: this.isDriver ? Usertype.Driver : Usertype.Customer,\r\n      blocked: false,\r\n    };\r\n    console.log(newUser);\r\n    this.usersService.addNewUser(newUser);\r\n  }\r\n\r\n  jmbgValidator(control:FormControl) : {[s:string]:boolean}{\r\n    if(!this.checkJmbg(control.value)){\r\n      return {'jmbgInvalid':true};\r\n    }\r\n    return null;\r\n  }\r\n  private checkJmbg(jmbg : string) : boolean{\r\n    if(!jmbg){\r\n      return true;\r\n    }\r\n    let a = +jmbg[0];\r\n    let b = +jmbg[1];\r\n    let c = +jmbg[2];\r\n    let d = +jmbg[3];\r\n    let e = +jmbg[4];\r\n    let f = +jmbg[5];\r\n    let g = +jmbg[6];\r\n    let h = +jmbg[7];\r\n    let i = +jmbg[8];\r\n    let j = +jmbg[9];\r\n    let k = +jmbg[10];\r\n    let l = +jmbg[11];\r\n    let m = +jmbg[12];\r\n    const checksum = 11 - ((7*(a+g)+6*(b+h)+5*(c+i)+4*(d+j)+3*(e+k)+2*(f+l)) % 11);\r\n    if(m != checksum)\r\n      return false;\r\n    return true;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-5\\\">\\r\\n    <h3>All users</h3>\\r\\n    <app-user-list></app-user-list>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-5 col-md-offset-1\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Directive, HostBinding, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appDropdown]'\r\n})\r\nexport class DropdownDirective {\r\n  @HostBinding('class.open') isOpen = false;\r\n    \r\n  @HostListener('click') toogleOpen(){\r\n      this.isOpen = !this.isOpen;\r\n  }\r\n  @HostListener('mouseleave') openOnFocus(){\r\n    this.isOpen = false;\r\n  }\r\n  constructor() { }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService:AuthService,\r\n              private router:Router){}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean \r\n    {\r\n    if(this.authService.isUserAuthenticated()){\r\n      return true;\r\n    }else{\r\n      this.router.navigate(['login']);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginGuard implements CanActivate {\r\n\r\n  constructor(private authService:AuthService,\r\n              private router:Router){}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    \r\n      if(!this.authService.isUserAuthenticated()){\r\n        return true;\r\n      }else{\r\n        this.router.navigate(['/home']);\r\n      }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistrationGuard implements CanActivate {\r\n  constructor(private router:Router){}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      if(!next.queryParams['type'] || (next.queryParams['type'] !== 'customer' && next.queryParams['type'] !== 'driver')){\r\n        this.router.navigate(['/login']);\r\n      }\r\n      return true;\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { Usertype } from './usertype.enum';\r\nimport { CookieService } from './cookie.service';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { UsersService } from './users.service';\r\nimport { Router } from '@angular/router';\r\nimport { ExternalApisDataService } from './external-apis-data.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService{\r\n\r\n  private currentUser:User = {username:null,usertype:Usertype.Guest,token:null,blocked:null};\r\n  private authenticated:boolean = false;\r\n  \r\n  userChanged = new Subject<User>();\r\n  authStatus = new Subject<boolean>();\r\n\r\n  constructor(private cookieService: CookieService,\r\n              private router:Router,\r\n              private http:HttpClient,\r\n              private externalApisDataService:ExternalApisDataService) { \r\n\r\n    const cookie = cookieService.getCookie(\"taxiServiceData\");\r\n    if(cookie !== \"\"){\r\n      const user = this.decodeCookie(cookie);\r\n      if(user.username === 'undefined')\r\n        this.logout();\r\n      this.currentUser.username = user.username;\r\n      this.currentUser.usertype = user.usertype;\r\n      this.currentUser.token = user.token;\r\n      this.currentUser.blocked = user.blocked;\r\n      this.authenticated = true;  \r\n      this.userChanged.next(this.currentUser);\r\n    }else{\r\n      this.authenticated = false;\r\n    }\r\n  }\r\n\r\n  authenticateUser(username:string,password:string) : Subject<boolean> | boolean{\r\n    if(this.authenticated){\r\n      return true;\r\n    }\r\n\r\n    const url = this.externalApisDataService.getDataApiHostname() + '/access/login';\r\n    \r\n    this.http.post(url, {username:username, password:password}).subscribe(\r\n      data =>{\r\n        this.currentUser.username = username;\r\n        const dataSplit:string[] = (data as string).split(\";\");\r\n        this.currentUser.token = dataSplit[0];\r\n        this.currentUser.usertype = +dataSplit[1];\r\n        this.currentUser.blocked = dataSplit[2].toLowerCase() === 'true' ? true : false;\r\n        console.log(dataSplit[2]);\r\n        this.authenticated = true;\r\n        const cookie = this.createCookie();\r\n        this.cookieService.setCookie('taxiServiceData',cookie, 365);\r\n        this.userChanged.next(this.currentUser);\r\n        this.authStatus.next(true);\r\n      },\r\n      error => {\r\n        console.log(error.status);\r\n        this.authStatus.next(false);\r\n      }\r\n    );\r\n    return this.authStatus;\r\n  }\r\n\r\n  isUserAuthenticated(){\r\n    return this.authenticated;\r\n  }\r\n\r\n  isUserBlocked(){\r\n    return this.currentUser.blocked;\r\n  }\r\n  logout(){\r\n    this.currentUser.username = null;\r\n    this.currentUser.usertype = Usertype.Guest;\r\n    this.currentUser.token = null;\r\n    this.authenticated = false;\r\n    this.cookieService.removeCookie('taxiServiceData');\r\n    this.userChanged.next(this.currentUser);\r\n    this.router.navigate(['\\login']);\r\n  }\r\n\r\n  getUserType() : Usertype{\r\n    return this.currentUser.usertype;\r\n  }\r\n\r\n  getCurrentUsername() : string{\r\n    return this.currentUser.username;\r\n  }\r\n\r\n  getApiToken() : string{\r\n    return this.currentUser.token;\r\n  }\r\n\r\n  private createCookie() : string{\r\n    //api token to be added later\r\n    if(this.authenticated){\r\n      return this.currentUser.username + ',' + this.currentUser.usertype + ',' + this.currentUser.token + ',' + this.currentUser.blocked;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private decodeCookie(cookie:string) : User{\r\n   const split = cookie.split(',');\r\n\r\n   return {\r\n     username:split[0],\r\n     usertype:+split[1],\r\n     token:split[2],\r\n     blocked: split[3].toLowerCase() == \"true\" ? true : false,\r\n   };\r\n  }\r\n}\r\n  \r\n//interface for user data saved in cookie\r\n  export interface User{\r\n    username:string,\r\n    usertype:Usertype,\r\n    token:string,\r\n    blocked:boolean\r\n  }","import { Injectable, OnInit } from '@angular/core';\r\nimport { ICar, CarType, ApiRequest } from './interfaces';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { ExternalApisDataService } from './external-apis-data.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CarsDataService implements OnInit {\r\n\r\n  private cars:ICar[] = [\r\n    {carNumber:10, carType:CarType.sedan, registration:'ns-111-aa',  driver:'d', year:2010},\r\n    {carNumber:11, carType:CarType.van, registration:'ns-112-aa',  driver:null, year:2011},\r\n    {carNumber:12, carType:CarType.sedan, registration:'ns-113-aa',  driver:null, year:2012},\r\n  ];\r\n\r\n  carsChanged = new Subject<ICar[]>();\r\n  private carChanged = new Subject<ICar>();\r\n\r\n  constructor(private http:HttpClient,\r\n              private authService:AuthService,\r\n              private externApis:ExternalApisDataService) { }\r\n\r\n  ngOnInit(){\r\n  }\r\n\r\n  addNewCar(newCar:ICar){\r\n    const url = this.externApis.getDataApiHostname() + '/cars';\r\n    const data :ApiRequest = {\r\n      data : newCar,\r\n      userHash: this.authService.getApiToken()\r\n    };\r\n    this.http.post(url, data)\r\n    .subscribe(\r\n      next =>{\r\n        this.getAllCars();\r\n      },\r\n      error =>{console.log(error)}\r\n    );\r\n  }\r\n  \r\n  getCarByNumber(carNumber:number){\r\n    const url = this.externApis.getDataApiHostname() + '/cars/' + carNumber;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  removeCar(carId:number){\r\n    const url = this.externApis.getDataApiHostname() + '/cars/remove';\r\n    let data : ApiRequest = {\r\n      userHash : this.authService.getApiToken(),\r\n      data:carId\r\n    };\r\n    console.log(data.data);\r\n    this.http.post(url, data)\r\n    .subscribe(\r\n      next =>{\r\n        this.getAllCars();\r\n      },\r\n      error =>{console.log(error)}\r\n    );\r\n  }\r\n\r\n  getCar(driver:string){\r\n    const foundCar = this.cars.findIndex((car:ICar) =>{return car.driver === driver});\r\n    if(foundCar != -1){\r\n      return this.cars[foundCar];\r\n    }else{\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  getAllCars(){\r\n    const url = this.externApis.getDataApiHostname() + '/cars';\r\n    let cars : ICar[];\r\n    this.http.get(url).subscribe((data : ICar[]) => {\r\n      this.carsChanged.next(data);\r\n    });\r\n\r\n    return this.carsChanged;\r\n  }\r\n\r\n  updateCar(car:ICar){\r\n    const url = this.externApis.getDataApiHostname() + '/cars/' + car.carNumber;\r\n    let data : ApiRequest = {\r\n      userHash : this.authService.getApiToken(),\r\n      data:car\r\n    };\r\n    this.http.put(url, data)\r\n    .subscribe(\r\n      next =>{\r\n        this.getAllCars();\r\n      },\r\n      error =>{console.log(error)}\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CookieService {\r\n\r\n  constructor() { }\r\n\r\n  setCookie(cname, cvalue, exdays) {\r\n    let d = new Date();\r\n    d.setTime(d.getTime() + (exdays*24*60*60*1000));\r\n    let expires = \"expires=\"+ d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n  }\r\n\r\n  getCookie(cname) {\r\n        var name = cname + \"=\";\r\n        var decodedCookie = decodeURIComponent(document.cookie);\r\n        var ca = decodedCookie.split(';');\r\n        for(var i = 0; i <ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) == 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    removeCookie(cname){\r\n        const cookie = this.getCookie(cname);\r\n        if(cookie !== ''){\r\n            this.setCookie(cname, '', -1);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExternalApisDataService {\r\n\r\n  private gmapsKey = 'AIzaSyBrjeABCsOwW1rhi7eW6_b_fWF8OK2HeiA';\r\n  private hereAppId = 'bAXQChNSxbtNhSYbrloM';\r\n  private hereAppCode = '%20FT-7YO-65_E2m1OFO8NvqQ';\r\n  private dataApiAddress = 'http://localhost:7685/api';\r\n  constructor() { }\r\n\r\n  getGoogleMapsApiKey() : string{\r\n    return this.gmapsKey.slice();\r\n  }\r\n\r\n  getHereAppId():string{\r\n    return this.hereAppId.slice();\r\n  }\r\n\r\n  getHereAppCode():string{\r\n    return this.hereAppCode.slice();\r\n  }\r\n\r\n  getDataApiHostname(){\r\n    return this.dataApiAddress;\r\n  }\r\n}\r\n","import { Usertype } from \"./usertype.enum\";\r\n\r\nexport interface ICar{\r\n    driver : string,\r\n    year: number,\r\n    registration: string,\r\n    carNumber: number,\r\n    carType: CarType\r\n}\r\n\r\nexport enum CarType{\r\n    sedan,\r\n    van,\r\n    undefined\r\n} \r\n\r\nexport interface INewUser{\r\n    username: string,\r\n    password: string,\r\n    email: string,\r\n    name: string,\r\n    lastname: string,\r\n    jmbg: string,\r\n    phone: number,\r\n    CarNumber: number,\r\n    userType: Usertype,\r\n    blocked: boolean\r\n}\r\n\r\nexport interface IBasicUser{\r\n    username:string,\r\n    email: string,\r\n    type: Usertype,\r\n    phone: number,\r\n    blocked: boolean\r\n}\r\n\r\nexport interface ILocation{\r\n    lat:number,\r\n    lng:number,\r\n    address: string\r\n}\r\n\r\nexport interface IDriver{\r\n    username:string,\r\n    cartype:CarType,\r\n    location:ILocation,\r\n    Free:boolean\r\n}\r\n\r\nexport interface IRide{\r\n    Id: number,\r\n    Location: ILocation,\r\n    Destination: ILocation,\r\n    Customer: string,\r\n    Driver: string,\r\n    Dispatcher:string,\r\n    Fare: number,\r\n    Comment: IComment,\r\n    Time:string,\r\n    Status: RideStatus\r\n    CarType: CarType\r\n}\r\n\r\nexport interface IRideRequest{\r\n    location:ILocation,\r\n    destination:ILocation,\r\n    driver:string,\r\n    cartype:CarType,\r\n    rideid:number,\r\n    fare:number\r\n}\r\n\r\nexport interface IComment{\r\n    description: string,\r\n    time: string,\r\n    rating: number,\r\n    rideid:number,\r\n}\r\nexport enum RideStatus{\r\n    ordered,\r\n    processed,\r\n    waiting,\r\n    accepted,\r\n    cancelled,\r\n    sucessful,\r\n    failed\r\n}\r\n\r\nexport interface ApiRequest{\r\n    userHash:string,\r\n    data:object | number | string\r\n}","import { Injectable } from '@angular/core';\r\nimport { IRide, RideStatus, ApiRequest, IRideRequest, IComment, ILocation } from './interfaces';\r\nimport { Subject } from 'rxjs';\r\nimport { Usertype } from './usertype.enum';\r\nimport { stringify } from '@angular/compiler/src/util';\r\nimport { ExternalApisDataService } from './external-apis-data.service';\r\nimport { AuthService } from './auth.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RidesService {\r\n\r\n  ridesChanged = new Subject<IRide[]>();\r\n  waitingRidesChanged = new Subject<IRide[]>();\r\n  \r\n  constructor(private externApis:ExternalApisDataService,\r\n              private authService:AuthService,\r\n              private http:HttpClient) { }\r\n\r\n  newRide(ride: IRideRequest){\r\n    const url = this.externApis.getDataApiHostname() + '/rides';\r\n    const data: ApiRequest = {\r\n      data: ride,\r\n      userHash: this.authService.getApiToken()\r\n    }\r\n    return this.http.post(url, data);\r\n  }\r\n\r\n  getAllRidesForUser(){\r\n    const url = this.externApis.getDataApiHostname() + '/rides/user/' + this.authService.getCurrentUsername();\r\n    console.log(url);\r\n    return this.http.get(url);\r\n  }\r\n  getAllRides(){\r\n    const url = this.externApis.getDataApiHostname() + '/rides';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  finishRide(destination:ILocation, rideId:number, fare:number){\r\n    const url = this.externApis.getDataApiHostname() + '/rides/finish';\r\n    const request : ApiRequest = {\r\n      userHash : this.authService.getApiToken(),\r\n      data : {\r\n        location : destination,\r\n        rideId : rideId,\r\n        fare: fare\r\n      }\r\n    }\r\n    console.log(request);\r\n    return this.http.post(url, request);\r\n  }\r\n\r\n  failRide(rideId:number){\r\n    const url = this.externApis.getDataApiHostname() + '/rides/fail';\r\n    const request : ApiRequest = {\r\n      userHash : this.authService.getApiToken(),\r\n      data : rideId\r\n    }\r\n    console.log(request);\r\n    return this.http.post(url, request);\r\n  }\r\n\r\n  postComment(comment:IComment){\r\n    const url = this.externApis.getDataApiHostname() + '/rides/comment';\r\n    const data: ApiRequest = {\r\n      userHash: this.authService.getApiToken(),\r\n      data: comment\r\n    }\r\n\r\n    return this.http.post(url, data);\r\n  }\r\n\r\n  cancelRide(rideId:number){\r\n    const url = this.externApis.getDataApiHostname() + '/rides/cancel';\r\n    const data : ApiRequest = {\r\n      userHash : this.authService.getApiToken(),\r\n      data: rideId\r\n    }\r\n\r\n    return this.http.post(url, data);\r\n  }\r\n\r\n  updateRideLocation(rideId:number,location:Location){\r\n\r\n  }\r\n\r\n  getRideById(id:number){\r\n    const url = this.externApis.getDataApiHostname() + '/rides/' + id;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  acceptRide(driver:string, rideId:number){\r\n    const url = this.externApis.getDataApiHostname() + '/rides/accept';\r\n    const data : IRideRequest = {\r\n      driver : driver,\r\n      rideid : rideId,\r\n      cartype : null,\r\n      destination: null,\r\n      fare: null,\r\n      location : null\r\n    }\r\n    const request : ApiRequest = {\r\n      userHash:this.authService.getApiToken(),\r\n      data : data\r\n    }\r\n    console.log(request);\r\n    return this.http.post(url, request);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { INewUser, IBasicUser, ApiRequest, ILocation } from './interfaces';\r\nimport { AuthService } from './auth.service';\r\nimport { Usertype } from './usertype.enum';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ExternalApisDataService } from './external-apis-data.service';\r\nimport { stringify } from 'querystring';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n  usersChanged = new Subject<string[]>();\r\n  driversChanged = new Subject<string[]>();\r\n\r\n  private users:INewUser[] = [\r\n    {username:'c', password: 'c', userType: Usertype.Customer, CarNumber:null, email:'customer@test.com', jmbg:null, name:null, lastname:null, phone:null, blocked:false},\r\n    {username:'d', password: 'd', userType: Usertype.Driver, CarNumber:10, email:'driver@test.com', jmbg:null, name:null, lastname:null, phone:null, blocked:false},\r\n    {username:'a', password: 'a', userType: Usertype.Dispatcher, CarNumber:null, email:'dispatcher@test.com', jmbg:null, name:null, lastname:null, phone:null, blocked:false},\r\n  ];;\r\n  constructor(private http:HttpClient,\r\n              private authService:AuthService,\r\n              private externApis:ExternalApisDataService) { }\r\n\r\n  addNewUser(newUser: INewUser){\r\n    //this.users.push(newUser);\r\n    //this.usersChanged.next(this.getAllUsersUsernames());\r\n    const url = this.externApis.getDataApiHostname() + '/users/create';\r\n    this.http.post(url,newUser).subscribe(\r\n      next =>{ console.log(next)},\r\n      error =>{console.log(error.status)}\r\n    );\r\n  }\r\n\r\n  updateUser(editUser: INewUser){\r\n    const url = this.externApis.getDataApiHostname() + '/users';\r\n    const data : ApiRequest = {\r\n      data : editUser,\r\n      userHash : this.authService.getApiToken()\r\n    };\r\n    return this.http.put(url, data);\r\n  }\r\n\r\n  removeUser(username:string){\r\n    const url = this.externApis.getDataApiHostname() + '/users/remove';\r\n    const data : ApiRequest = {\r\n      data: username,\r\n      userHash: this.authService.getApiToken()\r\n    }\r\n    this.http.post(url, data).subscribe(\r\n      data => {this.authService.logout()},\r\n      error => {console.log(error)}\r\n    );\r\n  }\r\n\r\n  getUser(username:string){\r\n    const data : ApiRequest = {\r\n      data: username,\r\n      userHash: this.authService.getApiToken()\r\n    }\r\n    const url = this.externApis.getDataApiHostname() + '/users/mydata'+ '?' + stringify(data);\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getUserBasicInfo(username:string) {\r\n    const url = this.externApis.getDataApiHostname() + '/users/' + username;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getAllDrivers(){\r\n    const url = this.externApis.getDataApiHostname() + '/users/drivers';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  changeDriverLocation(location:ILocation){\r\n    const url = this.externApis.getDataApiHostname() + '/users/driver/location';\r\n    const request : ApiRequest = {\r\n      data : location,\r\n      userHash : this.authService.getApiToken()\r\n    }\r\n    return this.http.put(url, request);\r\n  }\r\n\r\n  getAllUsersUsernames(){\r\n    const url = this.externApis.getDataApiHostname() + '/users';\r\n    console.log(url);\r\n    this.http.get(url).subscribe(\r\n      (data:string[]) => {this.usersChanged.next(data)},\r\n      error => console.log(error)\r\n    );\r\n    return this.usersChanged;\r\n  }\r\n\r\n  blockUser(username:string){\r\n    const url = this.externApis.getDataApiHostname() + '/users/block';\r\n    const data : ApiRequest = {\r\n      userHash: this.authService.getApiToken(),\r\n      data: username\r\n    };\r\n    return this.http.post(url, data);\r\n  }\r\n\r\n  unblockUser(username:string){\r\n    const url = this.externApis.getDataApiHostname() + '/users/unblock';\r\n    const data : ApiRequest = {\r\n      userHash: this.authService.getApiToken(),\r\n      data: username\r\n    };\r\n    return this.http.post(url, data);\r\n  }\r\n\r\n  changePassword(username:string,newPassword:string){\r\n    const url = this.externApis.getDataApiHostname() + '/users/changepass'\r\n    const data : ApiRequest = {\r\n      userHash: this.authService.getApiToken(),\r\n      data: newPassword\r\n    };\r\n    return this.http.put(url, data);\r\n  }\r\n}\r\n","export enum Usertype {\r\n    Guest,\r\n    Customer,\r\n    Driver,\r\n    Dispatcher\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}