{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/cars/add-car/add-car.component.css","webpack:///./src/app/components/cars/add-car/add-car.component.html","webpack:///./src/app/components/cars/add-car/add-car.component.ts","webpack:///./src/app/components/cars/car-details/car-details.component.css","webpack:///./src/app/components/cars/car-details/car-details.component.html","webpack:///./src/app/components/cars/car-details/car-details.component.ts","webpack:///./src/app/components/cars/car-item/car-item.component.css","webpack:///./src/app/components/cars/car-item/car-item.component.html","webpack:///./src/app/components/cars/car-item/car-item.component.ts","webpack:///./src/app/components/cars/cars-list/cars-list.component.css","webpack:///./src/app/components/cars/cars-list/cars-list.component.html","webpack:///./src/app/components/cars/cars-list/cars-list.component.ts","webpack:///./src/app/components/cars/cars.component.css","webpack:///./src/app/components/cars/cars.component.html","webpack:///./src/app/components/cars/cars.component.ts","webpack:///./src/app/components/drivers/drivers.component.css","webpack:///./src/app/components/drivers/drivers.component.html","webpack:///./src/app/components/drivers/drivers.component.ts","webpack:///./src/app/components/drivers/edit-driver/edit-driver.component.css","webpack:///./src/app/components/drivers/edit-driver/edit-driver.component.html","webpack:///./src/app/components/drivers/edit-driver/edit-driver.component.ts","webpack:///./src/app/components/errors/no-cars-error/no-cars-error.component.css","webpack:///./src/app/components/errors/no-cars-error/no-cars-error.component.html","webpack:///./src/app/components/errors/no-cars-error/no-cars-error.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/rides/accept-ride/accept-ride.component.css","webpack:///./src/app/components/rides/accept-ride/accept-ride.component.html","webpack:///./src/app/components/rides/accept-ride/accept-ride.component.ts","webpack:///./src/app/components/rides/add-comment/add-comment.component.css","webpack:///./src/app/components/rides/add-comment/add-comment.component.html","webpack:///./src/app/components/rides/add-comment/add-comment.component.ts","webpack:///./src/app/components/rides/comment-details/comment-details.component.css","webpack:///./src/app/components/rides/comment-details/comment-details.component.html","webpack:///./src/app/components/rides/comment-details/comment-details.component.ts","webpack:///./src/app/components/rides/new-ride/new-ride.component.css","webpack:///./src/app/components/rides/new-ride/new-ride.component.html","webpack:///./src/app/components/rides/new-ride/new-ride.component.ts","webpack:///./src/app/components/rides/ride-details/ride-details.component.css","webpack:///./src/app/components/rides/ride-details/ride-details.component.html","webpack:///./src/app/components/rides/ride-details/ride-details.component.ts","webpack:///./src/app/components/rides/ride-item/ride-item.component.css","webpack:///./src/app/components/rides/ride-item/ride-item.component.html","webpack:///./src/app/components/rides/ride-item/ride-item.component.ts","webpack:///./src/app/components/rides/rides-list/rides-list.component.css","webpack:///./src/app/components/rides/rides-list/rides-list.component.html","webpack:///./src/app/components/rides/rides-list/rides-list.component.ts","webpack:///./src/app/components/rides/rides.component.css","webpack:///./src/app/components/rides/rides.component.html","webpack:///./src/app/components/rides/rides.component.ts","webpack:///./src/app/components/users/edit-user/edit-user.component.css","webpack:///./src/app/components/users/edit-user/edit-user.component.html","webpack:///./src/app/components/users/edit-user/edit-user.component.ts","webpack:///./src/app/components/users/full-user-details/full-user-details.component.css","webpack:///./src/app/components/users/full-user-details/full-user-details.component.html","webpack:///./src/app/components/users/full-user-details/full-user-details.component.ts","webpack:///./src/app/components/users/management/user-details/user-details.component.css","webpack:///./src/app/components/users/management/user-details/user-details.component.html","webpack:///./src/app/components/users/management/user-details/user-details.component.ts","webpack:///./src/app/components/users/management/user-item/user-item.component.css","webpack:///./src/app/components/users/management/user-item/user-item.component.html","webpack:///./src/app/components/users/management/user-item/user-item.component.ts","webpack:///./src/app/components/users/management/user-list/user-list.component.css","webpack:///./src/app/components/users/management/user-list/user-list.component.html","webpack:///./src/app/components/users/management/user-list/user-list.component.ts","webpack:///./src/app/components/users/password-change/password-change.component.css","webpack:///./src/app/components/users/password-change/password-change.component.html","webpack:///./src/app/components/users/password-change/password-change.component.ts","webpack:///./src/app/components/users/registration/registration.component.css","webpack:///./src/app/components/users/registration/registration.component.html","webpack:///./src/app/components/users/registration/registration.component.ts","webpack:///./src/app/components/users/users.component.css","webpack:///./src/app/components/users/users.component.html","webpack:///./src/app/components/users/users.component.ts","webpack:///./src/app/directives/dropdown.directive.ts","webpack:///./src/app/route-guards/auth.guard.ts","webpack:///./src/app/route-guards/login.guard.ts","webpack:///./src/app/route-guards/no-driver.guard.ts","webpack:///./src/app/route-guards/registration.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/cars-data.service.ts","webpack:///./src/app/services/cookie.service.ts","webpack:///./src/app/services/external-apis-data.service.ts","webpack:///./src/app/services/interfaces.ts","webpack:///./src/app/services/rides.service.ts","webpack:///./src/app/services/users.service.ts","webpack:///./src/app/services/usertype.enum.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from \"@angular/router\"\r\nimport { LoginComponent } from '../components/login/login.component';\r\nimport { HomeComponent } from '../components/home/home.component';\r\nimport { AuthGuard } from '../route-guards/auth.guard';\r\nimport { UsersComponent } from '../components/users/users.component';\r\nimport { LoginGuard } from '../route-guards/login.guard';\r\nimport { RegistrationComponent } from '../components/users/registration/registration.component';\r\nimport { RegistrationGuard } from '../route-guards/registration.guard';\r\nimport { NoCarsErrorComponent } from '../components/errors/no-cars-error/no-cars-error.component';\r\nimport { CarsComponent } from '../components/cars/cars.component';\r\nimport { AddCarComponent } from '../components/cars/add-car/add-car.component';\r\nimport { CarDetailsComponent } from '../components/cars/car-details/car-details.component';\r\nimport { FullUserDetailsComponent } from '../components/users/full-user-details/full-user-details.component';\r\nimport { EditUserComponent } from '../components/users/edit-user/edit-user.component';\r\nimport { PasswordChangeComponent } from '../components/users/password-change/password-change.component';\r\nimport { UserDetailsComponent } from '../components/users/management/user-details/user-details.component';\r\nimport { RidesComponent } from '../components/rides/rides.component';\r\nimport { NewRideComponent } from '../components/rides/new-ride/new-ride.component';\r\nimport { AcceptRideComponent } from '../components/rides/accept-ride/accept-ride.component';\r\nimport { RideDetailsComponent } from '../components/rides/ride-details/ride-details.component';\r\nimport { NoDriverGuard } from '../route-guards/no-driver.guard';\r\n\r\nconst appRoutes : Routes = [\r\n  {path:'login', component: LoginComponent, canActivate:[LoginGuard]},\r\n  {path:'registration', component: RegistrationComponent, canActivate:[LoginGuard, RegistrationGuard]},\r\n  {path: 'profile', component: FullUserDetailsComponent, canActivate:[AuthGuard]},\r\n  {path: 'edit-profile', component: EditUserComponent, canActivate:[AuthGuard]},\r\n  {path: 'password-change', component: PasswordChangeComponent, canActivate:[AuthGuard]},\r\n  {path:'driver-registration-error', component: NoCarsErrorComponent},\r\n  {path:'home', component: HomeComponent, canActivate:[AuthGuard], children:[\r\n    {path: 'rides', component: RidesComponent, children:[\r\n      {path: 'new', component: NewRideComponent, canActivate:[NoDriverGuard]},\r\n      {path: ':id/edit', component: NewRideComponent},\r\n      {path: ':id/accept', component: AcceptRideComponent},\r\n      {path: ':id', component: RideDetailsComponent},\r\n    ]},\r\n    {path: 'users', component: UsersComponent, children:[\r\n      {path: ':username', component: UserDetailsComponent}\r\n    ]},\r\n    {path: 'cars', component: CarsComponent, children:[\r\n      {path: 'new', component: AddCarComponent},\r\n      {path: ':id/edit', component: AddCarComponent},\r\n      {path: ':id', component: CarDetailsComponent}\r\n    ]}\r\n  ]},\r\n  {path: '', redirectTo:'home', pathMatch:'full'},\r\n  {path: '**', redirectTo:'home' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n  RouterModule.forRoot(appRoutes, {useHash:true})\r\n  ],\r\n  exports:[\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n }\r\n","module.exports = \"\"","module.exports = \"<app-header (featureSelected)=\\\"onNavigate($event)\\\"></app-header>\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\" >\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AuthService } from './services/auth.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { CookieService } from './services/cookie.service';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { DropdownDirective } from './directives/dropdown.directive';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { RegistrationComponent } from './components/users/registration/registration.component';\r\nimport { NoCarsErrorComponent } from './components/errors/no-cars-error/no-cars-error.component';\r\nimport { CarsComponent } from './components/cars/cars.component';\r\nimport { AddCarComponent } from './components/cars/add-car/add-car.component';\r\nimport { DriversComponent } from './components/drivers/drivers.component';\r\nimport { EditDriverComponent } from './components/drivers/edit-driver/edit-driver.component';\r\nimport { CarsListComponent } from './components/cars/cars-list/cars-list.component';\r\nimport { CarItemComponent } from './components/cars/car-item/car-item.component';\r\nimport { CarDetailsComponent } from './components/cars/car-details/car-details.component';\r\nimport { FullUserDetailsComponent } from './components/users/full-user-details/full-user-details.component';\r\nimport { PasswordChangeComponent } from './components/users/password-change/password-change.component';\r\nimport { EditUserComponent } from './components/users/edit-user/edit-user.component';\r\nimport { UserListComponent } from './components/users/management/user-list/user-list.component';\r\nimport { UserDetailsComponent } from './components/users/management/user-details/user-details.component';\r\nimport { UserItemComponent } from './components/users/management/user-item/user-item.component';\r\nimport { RidesComponent } from './components/rides/rides.component';\r\nimport { RidesListComponent } from './components/rides/rides-list/rides-list.component';\r\nimport { RideDetailsComponent } from './components/rides/ride-details/ride-details.component';\r\nimport { RideItemComponent } from './components/rides/ride-item/ride-item.component';\r\nimport { NewRideComponent } from './components/rides/new-ride/new-ride.component';\r\nimport { AcceptRideComponent } from './components/rides/accept-ride/accept-ride.component';\r\nimport { CommentDetailsComponent } from './components/rides/comment-details/comment-details.component';\r\nimport { AddCommentComponent } from './components/rides/add-comment/add-comment.component';\r\nimport { AgmCoreModule } from '@agm/core'\r\nimport { ExternalApisDataService } from './services/external-apis-data.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    DropdownDirective,\r\n    UsersComponent,\r\n    RegistrationComponent,\r\n    NoCarsErrorComponent,\r\n    CarsComponent,\r\n    AddCarComponent,\r\n    DriversComponent,\r\n    EditDriverComponent,\r\n    CarsListComponent,\r\n    CarItemComponent,\r\n    CarDetailsComponent,\r\n    FullUserDetailsComponent,\r\n    PasswordChangeComponent,\r\n    EditUserComponent,\r\n    UserListComponent,\r\n    UserDetailsComponent,\r\n    UserItemComponent,\r\n    RidesComponent,\r\n    RidesListComponent,\r\n    RideDetailsComponent,\r\n    RideItemComponent,\r\n    NewRideComponent,\r\n    AcceptRideComponent,\r\n    CommentDetailsComponent,\r\n    AddCommentComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey:'AIzaSyBrjeABCsOwW1rhi7eW6_b_fWF8OK2HeiA'\r\n    })\r\n  ],\r\n  providers: [AuthService, CookieService, ExternalApisDataService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<h3 *ngIf=\\\"!editMode\\\">New car</h3>\\r\\n<h3 *ngIf=\\\"editMode\\\">Edit {{car.carNumber}}</h3>\\r\\n<form [formGroup]=\\\"carForm\\\" (submit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"registration\\\">Registration</label>\\r\\n    <input type=\\\"text\\\" id=\\\"registation\\\" formControlName=\\\"registration\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"year\\\">Year</label>\\r\\n    <input type=\\\"number\\\" id=\\\"year\\\" formControlName=\\\"year\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n  <select id=\\\"type\\\" formControlName=\\\"type\\\" class=\\\"form-control\\\">\\r\\n    <option value=0>Sedan</option>\\r\\n    <option value=1>Van</option>\\r\\n  </select>\\r\\n  <hr>\\r\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{editMode ? 'Edit' : 'Add'}}</button>\\r\\n</form>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ICar } from '../../../services/interfaces';\r\nimport { CarsDataService } from '../../../services/cars-data.service';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-car',\r\n  templateUrl: './add-car.component.html',\r\n  styleUrls: ['./add-car.component.css']\r\n})\r\nexport class AddCarComponent implements OnInit {\r\n\r\n  car: ICar;\r\n  editMode = false;\r\n  private id : number;\r\n  carForm :FormGroup;\r\n  constructor(private carsService: CarsDataService,\r\n              private route:ActivatedRoute) {  }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe((params:Params) => {\r\n      this.id = +params['id'];\r\n      this.editMode = params['id'] != null;\r\n      if(!this.editMode){\r\n        this.carForm = new FormGroup({\r\n          registration: new FormControl(null),\r\n          year: new FormControl(null),\r\n          type: new FormControl(0),\r\n        });\r\n      }else{\r\n        this.car = this.carsService.getCarByNumber(this.id);\r\n        this.carForm = new FormGroup({\r\n          registration: new FormControl(this.car.registration),\r\n          year: new FormControl(this.car.year),\r\n          type: new FormControl(this.car.carType),\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n    let c : ICar;\r\n    if(this.editMode){\r\n      c = {\r\n        carNumber : this.car.carNumber,\r\n        driverId : this.car.driverId,\r\n        carType : +this.carForm.value.type,\r\n        registration : this.carForm.value.registration,\r\n        year : +this.carForm.value.year\r\n      };\r\n      this.carsService.updateCar(c);\r\n    }else{\r\n      c = {\r\n        //TODO remove when connected with api service\r\n        carNumber : -1,\r\n        driverId : null,\r\n        carType : +this.carForm.value.type,\r\n        registration : this.carForm.value.registration,\r\n        year : +this.carForm.value.year\r\n      }\r\n      this.carsService.addNewCar(c);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"p{\\r\\n    font-size: 20px\\r\\n}\"","module.exports = \"<h2>Details</h2>\\r\\n<div class=\\\"pull-left\\\">\\r\\n  <p class=\\\"list-group-item-text\\\">Registration: {{car.registration}}</p>\\r\\n  <p class=\\\"list-group-item-text\\\">DriverId: {{car.driverId}}</p>\\r\\n  <p class=\\\"list-group-item-text\\\">CarType: {{carType}}</p>\\r\\n  <p class=\\\"list-group-item-text\\\">Year: {{car.year}}</p>\\r\\n</div>\\r\\n<div class=\\\"pull-right\\\">\\r\\n<a class=\\\"btn btn-primary\\\" (click)=\\\"onEdit()\\\">Edit</a>\\r\\n<a *ngIf=\\\"!car.driverId\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onRemove()\\\">Remove</a>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ICar, CarType } from '../../../services/interfaces';\r\nimport { Params, ActivatedRoute, Router } from '@angular/router';\r\nimport { CarsDataService } from '../../../services/cars-data.service';\r\n\r\n@Component({\r\n  selector: 'app-car-details',\r\n  templateUrl: './car-details.component.html',\r\n  styleUrls: ['./car-details.component.css']\r\n})\r\nexport class CarDetailsComponent implements OnInit {\r\n\r\n  car:ICar = null;\r\n  private id : number;\r\n  carType : string;\r\n  constructor(private route:ActivatedRoute,\r\n              private router:Router,\r\n              private carsService:CarsDataService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe((params:Params) => {\r\n      this.id = +params['id'];\r\n      if(!this.carsService.exists(this.id)){\r\n        this.router.navigate(['../'], {relativeTo:this.route});\r\n      }\r\n\r\n      this.car = this.carsService.getCarByNumber(this.id);\r\n      switch(this.car.carType){\r\n        case CarType.sedan: this.carType = 'Sedan';break;\r\n        case CarType.van: this.carType = 'Van';break;\r\n        case CarType.undefined: this.carType = 'Undefined';break;\r\n      }\r\n    });\r\n  }\r\n\r\n  \r\n  onEdit(){\r\n    this.router.navigate(['../',this.car.carNumber,'edit'], {relativeTo:this.route});\r\n  }\r\n  onRemove(){\r\n    this.carsService.removeCar(this.car.carNumber);\r\n    this.router.navigate(['../'], {relativeTo: this.route})\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<a [routerLink]=\\\"[car.carNumber]\\\" routerLinkActive=\\\"active\\\" style=\\\"cursor:pointer\\\" class=\\\"list-group-item clearfix\\\" >\\r\\n  <div class=\\\"pull-left\\\">\\r\\n      <h4 class=\\\"list-group-item-heading\\\">{{car.carNumber}}</h4>\\r\\n  </div>\\r\\n</a>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ICar, CarType } from '../../../services/interfaces';\r\nimport { ActivatedRouteSnapshot, ActivatedRoute, Router, ROUTER_CONFIGURATION } from '@angular/router';\r\nimport { CarsDataService } from '../../../services/cars-data.service';\r\n\r\n@Component({\r\n  selector: 'app-car-item',\r\n  templateUrl: './car-item.component.html',\r\n  styleUrls: ['./car-item.component.css']\r\n})\r\nexport class CarItemComponent implements OnInit {\r\n\r\n  @Input() car:ICar;\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private carsService: CarsDataService) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n}\r\n","module.exports = \".pre-scrollable {\\r\\n    max-height: 400px;\\r\\n    overflow-y: scroll;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\" row well well-sm pre-scrollable\\\">\\r\\n  <div class=\\\"list-group\\\">\\r\\n  <app-car-item *ngFor=\\\"let car of cars\\\"\\r\\n  [car]=\\\"car\\\"></app-car-item>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ICar } from '../../../services/interfaces';\r\nimport { CarsDataService } from '../../../services/cars-data.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-cars-list',\r\n  templateUrl: './cars-list.component.html',\r\n  styleUrls: ['./cars-list.component.css']\r\n})\r\nexport class CarsListComponent implements OnInit, OnDestroy {\r\n  cars : ICar[] = [];\r\n  private carsSubscription : Subscription;\r\n  constructor(private carService: CarsDataService) { }\r\n\r\n  ngOnInit() {\r\n    this.cars = this.carService.getAllCars();\r\n    this.carsSubscription = this.carService.carsChanged.subscribe((cars:ICar[]) =>{\r\n      this.cars = cars;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.carsSubscription.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-5\\\">\\r\\n    <h3>All cars</h3>\\r\\n    <app-cars-list></app-cars-list>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-5 col-md-offset-1\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-cars',\r\n  templateUrl: './cars.component.html',\r\n  styleUrls: ['./cars.component.css']\r\n})\r\nexport class CarsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  drivers works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-drivers',\r\n  templateUrl: './drivers.component.html',\r\n  styleUrls: ['./drivers.component.css']\r\n})\r\nexport class DriversComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  edit-driver works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-driver',\r\n  templateUrl: './edit-driver.component.html',\r\n  styleUrls: ['./edit-driver.component.css']\r\n})\r\nexport class EditDriverComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>We are currently not accepting new drivers!</h1>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-no-cars-error',\n  templateUrl: './no-cars-error.component.html',\n  styleUrls: ['./no-cars-error.component.css']\n})\nexport class NoCarsErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".active{\\r\\n    font-weight: bold\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" (click)=\\\"toogleCollapse()\\\">\\r\\n                    <span class=\\\"icon-bar\\\"></span>\\r\\n                    <span class=\\\"icon-bar\\\"></span>\\r\\n                    <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n            <a routerLink=\\\"/home\\\" class=\\\"navbar-brand\\\" style=\\\"cursor:pointer\\\">Taxi Service</a>\\r\\n        </div>\\r\\n        <div class=\\\"navbar-collapse collapse\\\" #responsiveNavbar collapse=\\\"navCollapsed\\\" >\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n                <li routerLinkActive=\\\"active\\\" *ngIf=\\\"!userType || userType === 0\\\">\\r\\n                    <a routerLink=\\\"/login\\\" style=\\\"cursor: pointer;\\\">Login</a>\\r\\n                </li>\\r\\n                <li routerLinkActive=\\\"active\\\" class=\\\"dropdown\\\" appDropdown *ngIf=\\\"!userType || userType === 0\\\">\\r\\n                    <a class=\\\"dropdown-toggle\\\" role=\\\"button\\\" style=\\\"cursor: pointer;\\\" >Registration<span class=\\\"caret\\\"></span></a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li><a routerLink=\\\"/registration\\\" [queryParams]=\\\"{type: 'customer'}\\\" style=\\\"cursor: pointer;\\\">New Customer</a></li>\\r\\n                        <li><a routerLink=\\\"/registration\\\" [queryParams]=\\\"{type: 'driver'}\\\" style=\\\"cursor: pointer;\\\">New Driver</a></li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li class=\\\"dropdown\\\" appDropdown *ngIf=\\\"userType && userType !== 0\\\">\\r\\n                    <a class=\\\"dropdown-toggle\\\" role=\\\"button\\\" style=\\\"cursor: pointer;\\\" >Rides<span class=\\\"caret\\\"></span></a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li *ngIf=\\\"userType && userType !== 2\\\"><a [routerLink]=\\\"['/home','rides','new']\\\" style=\\\"cursor: pointer;\\\">Add New</a></li>\\r\\n                        <li><a [routerLink]=\\\"['/home','rides']\\\" style=\\\"cursor: pointer;\\\">All Rides</a></li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li class=\\\"dropdown\\\" appDropdown *ngIf=\\\"userType === 3\\\">\\r\\n                    <a class=\\\"dropdown-toggle\\\" role=\\\"button\\\" style=\\\"cursor: pointer;\\\" >Users<span class=\\\"caret\\\"></span></a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li><a style=\\\"cursor: pointer;\\\" [routerLink]=\\\"['/home','users']\\\" routerLinkActive=\\\"router-link-active\\\" >All Users</a></li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li class=\\\"dropdown\\\" appDropdown *ngIf=\\\"userType === 3\\\">\\r\\n                        <a class=\\\"dropdown-toggle\\\" role=\\\"button\\\" style=\\\"cursor: pointer;\\\" >Cars<span class=\\\"caret\\\"></span></a>\\r\\n                        <ul class=\\\"dropdown-menu\\\">\\r\\n                            <li><a [routerLink]=\\\"['/home','cars','new']\\\" style=\\\"cursor: pointer;\\\">Add New</a></li>\\r\\n                            <li><a [routerLink]=\\\"['/home','cars']\\\" style=\\\"cursor: pointer;\\\">All Cars</a></li>\\r\\n                        </ul>\\r\\n                    </li>\\r\\n            </ul>\\r\\n            <ul class=\\\"nav navbar-nav navbar-right\\\" *ngIf=\\\"userType && userType !== 0\\\">\\r\\n                <li class=\\\"dropdown\\\" appDropdown>\\r\\n                    <a class=\\\"dropdown-toggle\\\" role=\\\"button\\\" style=\\\"cursor: pointer;\\\" >Settings<span class=\\\"caret\\\"></span></a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li><a routerLink=\\\"/profile\\\" style=\\\"cursor: pointer;\\\">User Profile</a></li>\\r\\n                        <li><a routerLink=\\\"/password-change\\\" style=\\\"cursor: pointer;\\\">Change Password</a></li>\\r\\n                        <li *ngIf=\\\"userType && userType !== 3\\\" ><a style=\\\"cursor: pointer;\\\" (click)=\\\"onDeleteAccount()\\\">Delete Account</a></li>\\r\\n                        <li><a style=\\\"cursor: pointer;\\\" (click)=\\\"onLogout()\\\">Logout</a></li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\"","import { Component, OnInit, ElementRef, ViewChild, OnDestroy } from '@angular/core';\r\nimport { AuthService, User } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { Usertype } from '../../services/usertype.enum';\r\nimport { Subscriber, Subscription } from 'rxjs';\r\nimport { UsersService } from '../../services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  @ViewChild('responsiveNavbar') responsiveNavbar:ElementRef;\r\n  userType : Usertype = Usertype.Guest;\r\n  username : string = null;\r\n  private userSubscription : Subscription;\r\n  constructor(private authService:AuthService,\r\n              private router:Router,\r\n              private usersService:UsersService) {}\r\n\r\n  ngOnInit() {\r\n      this.userType = this.authService.getUserType();\r\n      this.userSubscription = this.authService.userChanged.subscribe((user:User)=>{\r\n      this.userType = user.usertype;\r\n      this.username = user.username;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.userSubscription.unsubscribe();\r\n  }\r\n  onLogout(){\r\n    this.authService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  onDeleteAccount(){\r\n    this.authService.removeUser(this.username);\r\n  }\r\n\r\n  toogleCollapse(){\r\n    this.responsiveNavbar.nativeElement.classList.toggle('collapse');\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\n      <form [formGroup]=\\\"loginForm\\\" (submit)=\\\"onLogin()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"username\\\">Username</label>\\n          <input type=\\\"text\\\" id=\\\"username\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\">\\n        </div>\\n        <span *ngIf=\\\"failed\\\" class=\\\"help-block\\\">Invalid username or password!</span>\\n        <button [disabled]=\\\"!loginForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\">Login</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm:FormGroup;\n  failed:boolean = false;\n\n  constructor(private router:Router,\n              private authSevice: AuthService) { }\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      'username' : new FormControl(null, Validators.required),\n      'password' : new FormControl(null, Validators.required),\n    });\n  }\n\n  onLogin(){\n    this.authSevice.authStatus.subscribe((ok:boolean)=>{\n      if(ok){\n        this.router.navigate(['/home','drives']);\n      }else{\n        this.failed = true;\n      }\n    });\n    const ok = this.authSevice.authenticateUser(this.loginForm.value['username'], this.loginForm.value['password']);\n    if(ok === true){\n      this.router.navigate(['/home','drives']);\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<form *ngIf=\\\"!isDriver\\\" [formGroup]=\\\"acceptForm\\\" (submit)=\\\"onAccept()\\\">\\n<div class=\\\"form-group\\\">\\n  <label for=\\\"driver\\\">Select Driver</label>\\n  <select id=\\\"driver\\\" formControlName=\\\"driver\\\" class=\\\"form-control\\\">\\n    <option *ngFor=\\\"let driver of drivers\\\" [value]=\\\"driver\\\">{{driver}}</option>\\n  </select>\\n</div>\\n<br>\\n<span class=\\\"help-block\\\" *ngIf=\\\"noFreeDrivers\\\">Fields marked with * are required.</span>\\n<button [disabled]=\\\"!acceptForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\">Accept</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../services/auth.service';\nimport { Usertype } from '../../../services/usertype.enum';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RidesService } from '../../../services/rides.service';\nimport { IRide, RideStatus } from '../../../services/interfaces';\nimport { UsersService } from '../../../services/users.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-accept-ride',\n  templateUrl: './accept-ride.component.html',\n  styleUrls: ['./accept-ride.component.css']\n})\nexport class AcceptRideComponent implements OnInit {\n\n  drivers : string[] = [];\n  isDriver = false;\n  noFreeDrivers = true;\n  rideId:number;\n  acceptForm = new FormGroup({\n    driver : new FormControl(null, Validators.required)\n  });\n\n  constructor(private authService:AuthService,\n              private userService:UsersService,\n              private ridesService:RidesService,\n              private route:ActivatedRoute,\n              private router:Router) { }\n\n  ngOnInit() {\n    \n    this.route.params.subscribe((params:Params) =>{\n      this.rideId = params.id;\n    });\n\n    this.isDriver = this.authService.getUserType() === Usertype.Driver;\n    if(!this.isDriver){\n      const drivers = this.userService.getAllDrivers();\n      drivers.forEach((username:string)=>{\n        const rides = this.ridesService.getAllRidesForDriver(username);\n        if(!rides.find((ride:IRide)=>{return (ride.status !== RideStatus.sucessful && ride.status !== RideStatus.failed)})){\n          this.drivers.push(username);\n        }\n      });\n      if(this.drivers.length === 0){\n        this.noFreeDrivers = true;\n      }else{\n        this.noFreeDrivers = false;\n        this.acceptForm.patchValue({driver:drivers[0]});\n      }\n    }else{\n      this.onAccept();\n    }\n  }\n\n  onAccept(){\n    if(!this.isDriver){\n      this.ridesService.acceptRide(this.authService.getCurrentUsername(), this.acceptForm.value.driver, this.rideId,Usertype.Dispatcher);\n    }else{\n      this.ridesService.acceptRide(null, this.authService.getCurrentUsername(), this.rideId,Usertype.Driver);      \n    }\n    this.router.navigate(['../'], {relativeTo: this.route});\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  add-comment works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-comment',\n  templateUrl: './add-comment.component.html',\n  styleUrls: ['./add-comment.component.css']\n})\nexport class AddCommentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  comment-details works!\\n</p>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { IComment } from '../../../services/interfaces';\n\n@Component({\n  selector: 'app-comment-details',\n  templateUrl: './comment-details.component.html',\n  styleUrls: ['./comment-details.component.css']\n})\nexport class CommentDetailsComponent implements OnInit {\n\n  @Input() comment : IComment;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"agm-map{\\r\\n    height: 300px;\\r\\n}\"","module.exports = \"<h3 *ngIf=\\\"!editMode\\\">New ride</h3>\\n<h3 *ngIf=\\\"editMode\\\">Edit ride</h3>\\n\\n<!--Google maps component-->\\n<agm-map [zoom]=\\\"zoom\\\" [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" (mapClick)=\\\"onChoseLocation($event)\\\">\\n  <agm-marker *ngIf=\\\"chosen\\\" [longitude]=\\\"marker.lng\\\" [latitude]=\\\"marker.lat\\\" [markerDraggable]=\\\"draggable\\\"></agm-marker>\\n</agm-map>\\n\\n<form [formGroup]=\\\"rideForm\\\" (submit)=\\\"onSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"address\\\">Address</label>\\n    <input type=\\\"text\\\" id=\\\"address\\\" formControlName=\\\"address\\\" class=\\\"form-control\\\">\\n  </div>\\n  <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"onCheckAddress()\\\">Check Address</button>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"cartype\\\">Car type</label>\\n    <select id=\\\"type\\\" formControlName=\\\"cartype\\\" class=\\\"form-control\\\">\\n      <option value=0>Sedan</option>\\n      <option value=1>Van</option>\\n    </select>\\n  </div>\\n  <hr>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{editMode ? 'Edit' : 'Add'}}</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RidesService } from '../../../services/rides.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ExternalApisDataService } from '../../../services/external-apis-data.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { IRide, RideStatus } from '../../../services/interfaces';\nimport { stringify } from 'querystring';\nimport { AuthService } from '../../../services/auth.service';\nimport { Usertype } from '../../../services/usertype.enum';\n\n@Component({\n  selector: 'app-new-ride',\n  templateUrl: './new-ride.component.html',\n  styleUrls: ['./new-ride.component.css']\n})\nexport class NewRideComponent implements OnInit {\n\n  rideForm:FormGroup;\n  editMode = false;\n  isDispatcher = false;\n  \n  //google maps specific\n  latitude = 45.260656;\n  longitude = 19.832157;\n  marker:IMarker = {lat:null, lng:null};\n  zoom = 14;\n  chosen = false;\n  draggable = true;\n  error = false;\n\n  constructor(private ridesService:RidesService,\n              private route:ActivatedRoute,\n              private apisServices:ExternalApisDataService,\n              private http:HttpClient,\n              private authService:AuthService) { }\n\n  ngOnInit() {\n    this.rideForm = new FormGroup({\n      address: new FormControl(null, Validators.required),\n      cartype: new FormControl(0),\n      driver: new FormControl(),\n    });\n    this.isDispatcher = this.authService.getUserType() === Usertype.Dispatcher;\n  }\n\n  onSubmit(){\n    const d = new Date();\n    if(!this.editMode){\n      let newRide : IRide = {\n        location : {\n          address: this.rideForm.value.address,\n          lat: this.marker.lat,\n          long: this.marker.lng\n        },\n        comment: null,\n        destination: null,\n        driver: null,\n        fare: 0,\n        status: RideStatus.waiting,\n        time: null,\n        id: -1,\n        dispatcher:null,\n        customer: null\n      }\n      if(this.isDispatcher){\n        newRide.dispatcher = this.authService.getCurrentUsername();\n      }else{\n        newRide.customer = this.authService.getCurrentUsername();\n      }\n\n      this.ridesService.newRide(newRide);\n    }else{\n\n    }\n  }\n\n  onChoseLocation(event){\n    this.marker.lat = event.coords.lat;\n    this.marker.lng = event.coords.lng;\n    this.chosen = true;\n    this.getAddressFromLocation();\n  }\n\n  getAddressFromLocation(){\n    //here maps reverse geocoding api\n    let requestString = 'https://reverse.geocoder.cit.api.here.com/6.2/reversegeocode.json?prox='+this.marker.lat+'%2C'+this.marker.lng+'%2C250&mode=retrieveAddresses&maxresults=1&gen=8&app_id='+this.apisServices.getHereAppId()+'&app_code='+this.apisServices.getHereAppCode()+'&language=en-US';\n    this.http.get(requestString).subscribe((response) =>{\n      console.log(response);\n      const address = response['Response']['View'][0]['Result'][0]['Location']['Address']['Label'];\n      this.rideForm.patchValue({address: address});\n    });\n  }\n\n  getLocationFromAddres(){\n    //here maps geocoding api\n    let requestString = 'https://geocoder.cit.api.here.com/6.2/geocode.json?searchtext='+ this.rideForm.value.address +'&app_id='+this.apisServices.getHereAppId()+'&app_code='+this.apisServices.getHereAppCode()+'&gen=8';\n    const headers = new HttpHeaders();\n    headers.set('Accept-Language', 'en-US');\n    this.http.get(requestString, {headers:headers}).subscribe((response) =>{\n      const data : object[] = response['Response']['View'];\n      if(data.length === 0){\n        this.error = true;\n      }else{\n        this.error = false;\n        const location = data[0]['Result'][0]['Location']['NavigationPosition'][0];\n        this.marker.lat = location['Latitude'];\n        this.marker.lng = location['Longitude'];\n        this.chosen = true;\n        console.log(location);\n      }\n    })\n  }\n\n  onCheckAddress(event){\n    this.getLocationFromAddres();\n  }\n}\n\ninterface IMarker{\n  lat:number,\n  lng:number\n}\n\n","module.exports = \".help-block{\\r\\n    color: red;\\r\\n    font-size: 20px;\\r\\n}\\r\\n\\r\\np{\\r\\n    font-size: 13px\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<h2>Details</h2>\\n<div *ngIf=\\\"ride\\\" class=\\\"pull-left\\\">\\n  <p class=\\\"list-group-item-text\\\" >Pickup location: {{ride.location.address}}</p>\\n  <p *ngIf=\\\"ride.destination\\\" class=\\\"list-group-item-text\\\">Destination : {{ride.destination.address}}</p>\\n  <p class=\\\"list-group-item-text\\\">Created on: {{ride.time}}</p>\\n  <p class=\\\"list-group-item-text\\\">Status: {{rideStatus}}</p>\\n  <p class=\\\"list-group-item-text\\\">Driver: {{ride.driver}}</p>\\n  <p class=\\\"list-group-item-text\\\">Fare: {{ride.fare}}</p>\\n  <app-comment-details *ngIf=\\\"ride && ride.comment\\\" [comment]=\\\"ride.comment\\\"></app-comment-details>\\n  <span class=\\\"help-block\\\" *ngIf=\\\"cancelFailed\\\">Failed to cancel ride, no longer in waiting.</span>\\n</div>\\n\\n<div class=\\\"pull-right\\\">\\n  <a *ngIf=\\\"(userType === 3 || userType === 2) && ride.status === 2 && (userType === 2 && driverFree)\\\" [routerLink]=\\\"['accept']\\\" class=\\\"btn btn-success\\\">Accept</a>\\n  <button *ngIf=\\\"userType === 1 && ride.status === 2\\\"  class=\\\"btn btn-danger\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { RidesService } from '../../../services/rides.service';\nimport { IRide, RideStatus } from '../../../services/interfaces';\nimport { Usertype } from '../../../services/usertype.enum';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-ride-details',\n  templateUrl: './ride-details.component.html',\n  styleUrls: ['./ride-details.component.css']\n})\nexport class RideDetailsComponent implements OnInit {\n\n  private id : number;\n  ride : IRide;\n  rideStatus: string;\n  userType: Usertype;\n\n  cancelFailed = false;\n\n  driverFree = true;\n\n  constructor(private route:ActivatedRoute,\n              private router:Router,\n              private ridesService:RidesService,\n              private authService: AuthService) { }\n\n  ngOnInit() {\n    this.route.params.subscribe((params:Params) => {\n      this.id = +params['id'];\n      this.ride = this.ridesService.getRideById(this.id);\n      switch(this.ride.status){\n        case RideStatus.waiting : this.rideStatus = 'Waiting';break;\n        case RideStatus.accepted : this.rideStatus = 'Accepted';break;\n        case RideStatus.cancelled : this.rideStatus = 'Cancelled';break;\n        case RideStatus.sucessful : this.rideStatus = 'Succesful';break;\n        case RideStatus.failed : this.rideStatus = 'Failed';break;\n        case RideStatus.processed : this.rideStatus = 'Processed';break;\n        case RideStatus.ordered : this.rideStatus = 'Ordered';break;\n      }\n    });\n    this.userType = this.authService.getUserType();\n    this.ridesService.ridesChanged.subscribe((rides:IRide[]) =>{\n      this.updateDriverStatus();\n    });\n    if(this.userType === Usertype.Driver){\n      this.updateDriverStatus();\n    }\n  }\n\n  private updateDriverStatus() {\n    let driverRides = this.ridesService.getAllRidesForDriver(this.authService.getCurrentUsername());\n    let driverBusy = false;\n    driverRides.forEach((ride: IRide) => {\n      if (ride.status !== RideStatus.waiting && ride.status !== RideStatus.sucessful && ride.status !== RideStatus.failed) {\n        driverBusy = true;\n      }\n    });\n    this.driverFree = !driverBusy;\n  }\n\n  onCancel(){\n    if(!this.ridesService.cancelRide(this.ride.id)){\n      this.cancelFailed = true;\n      setTimeout(() => {\n        this.cancelFailed = false;\n      }, 2000);\n    }\n    this.router.navigate(['../'], {relativeTo: this.route});\n  }\n}\n","module.exports = \"\"","module.exports = \"<a [routerLink]=\\\"[ride.id]\\\" routerLinkActive=\\\"active\\\" style=\\\"cursor:pointer\\\" class=\\\"list-group-item clearfix\\\" >\\n  <div class=\\\"pull-left\\\">\\n      <h4 class=\\\"list-group-item-heading\\\">{{ride.location.address}}</h4>\\n      <h4 class=\\\"list-group-item-heading\\\">{{ride.time}}</h4>\\n  </div>\\n</a>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { IRide } from '../../../services/interfaces';\n\n@Component({\n  selector: 'app-ride-item',\n  templateUrl: './ride-item.component.html',\n  styleUrls: ['./ride-item.component.css']\n})\nexport class RideItemComponent implements OnInit {\n\n  @Input() ride:IRide;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- <div class=\\\"row\\\">\\n<h3 *ngIf=\\\"waiting\\\">Waiting rides</h3>\\n<h3 *ngIf=\\\"!waiting\\\">All rides</h3>\\n</div> -->\\n<div class=\\\"row\\\">\\n  <button *ngIf=\\\"!waiting\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onWaitingRides()\\\">All rides</button>\\n  <button *ngIf=\\\"waiting\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onAllRides()\\\">Waiting</button>\\n</div>\\n<br>\\n\\n<div class=\\\" row well well-sm pre-scrollable\\\">\\n  <div class=\\\"list-group\\\">\\n  <app-ride-item *ngFor=\\\"let ride of rides\\\"\\n  [ride]=\\\"ride\\\"></app-ride-item>\\n  </div>\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { IRide } from '../../../services/interfaces';\nimport { Subscription } from 'rxjs';\nimport { RidesService } from '../../../services/rides.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { Usertype } from '../../../services/usertype.enum';\n\n@Component({\n  selector: 'app-rides-list',\n  templateUrl: './rides-list.component.html',\n  styleUrls: ['./rides-list.component.css']\n})\nexport class RidesListComponent implements OnInit, OnDestroy {\n\n  rides: IRide[] = [];\n  userType:Usertype;\n  private ridesSubscription = new Subscription();\n  private waiting = false;\n\n  constructor(private ridesService: RidesService,\n              private authService: AuthService) { }\n\n  ngOnInit() {\n    this.userType = this.authService.getUserType();\n    this.ridesSubscription = this.ridesService.ridesChanged.subscribe((rides:IRide[]) =>{\n      this.rides = rides;\n    });\n    this.rides = this.ridesService.getAllRides();\n  }\n\n  ngOnDestroy(){\n    this.ridesSubscription.unsubscribe();\n  }\n\n  onAllRides(){\n    this.waiting = false;\n    this.ridesSubscription.unsubscribe();\n    this.ridesSubscription = this.ridesService.ridesChanged.subscribe((rides:IRide[]) =>{\n      this.rides = rides;\n    });\n    this.rides = this.ridesService.getAllRides();\n  }\n\n  onWaitingRides(){\n    this.waiting = true;\n    this.ridesSubscription.unsubscribe();\n    this.ridesSubscription = this.ridesService.waitingRidesChanged.subscribe((rides:IRide[]) =>{\n      this.rides = rides;\n    });\n    this.rides = this.ridesService.getAllWaitingRides();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <app-rides-list></app-rides-list>\\n  </div>\\n  <div class=\\\"col-md-5 col-md-offset-1\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rides',\n  templateUrl: './rides.component.html',\n  styleUrls: ['./rides.component.css']\n})\nexport class RidesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"input.ng-touched.ng-invalid{\\r\\n    border: 1px red solid\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\n      <form [formGroup]=\\\"registrationForm\\\" (submit)=\\\"onEdit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email *</label>\\n          <input type=\\\"email\\\" id=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\">\\n          <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('email').invalid && registrationForm.get('email').touched && registrationForm.get('email').errors['required']\\\">This fields is required</span>\\n          <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('email').invalid && registrationForm.get('email').touched && registrationForm.get('email').errors['email']\\\">Invalid email format</span>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input type=\\\"text\\\" id=\\\"name\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"lastname\\\">Lastname</label>\\n          <input type=\\\"text\\\" id=\\\"lastname\\\" formControlName=\\\"lastname\\\" class=\\\"form-control\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"jmbg\\\">JMBG</label>\\n          <input type=\\\"text\\\" id=\\\"jmbg\\\" formControlName=\\\"jmbg\\\" class=\\\"form-control\\\">\\n          <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('jmbg').invalid && registrationForm.get('jmbg').touched && registrationForm.get('jmbg').errors['jmbgInvalid']\\\">Invalid JMBG</span>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"phone\\\">Phone *</label>\\n          <input type=\\\"text\\\" id=\\\"phone\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\">\\n          <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('phone').invalid && registrationForm.get('phone').touched && registrationForm.get('phone').errors['required']\\\">This fields is required.</span>\\n          <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('phone').invalid && registrationForm.get('phone').touched && registrationForm.get('phone').errors['pattern']\\\">Phone can contain only numbers.</span>\\n        </div>\\n        <!--For future use if driver wants to change car-->\\n        <!-- <div class=\\\"form-group\\\" *ngIf=\\\"isDriver\\\">\\n          <label for=\\\"carNumber\\\">Car Number</label>\\n          <select id=\\\"carNumber\\\" formControlName=\\\"carNumber\\\" class=\\\"form-control\\\">\\n            <option *ngFor=\\\"let car of freeCars\\\" [value]=\\\"car.carNumber\\\">{{car.carNumber}}</option>\\n          </select>\\n        </div> -->\\n        <br>\\n        <span class=\\\"help-block\\\">Fields marked with * are required.</span>\\n        <button [disabled]=\\\"!registrationForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary pull-left\\\">Confirm</button>\\n        <a routerLink=\\\"/profile\\\" class=\\\"btn btn-danger pull\\\">Cancel</a>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../../../services/users.service';\nimport { INewUser } from '../../../services/interfaces';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n\n  editUser:INewUser;\n  registrationForm:FormGroup;\n  constructor(private usersService:UsersService,\n              private authService:AuthService,\n              private router:Router) { }\n\n  ngOnInit() {\n    const username = this.authService.getCurrentUsername();\n    this.editUser = this.usersService.getUser(username);\n\n    this.registrationForm = new FormGroup({\n      email: new FormControl(this.editUser.email, [Validators.required, Validators.email]),\n      name: new FormControl(this.editUser.name),\n      lastname: new FormControl(this.editUser.lastname),\n      jmbg: new FormControl(this.editUser.jmbg, [Validators.pattern('[0-9]{13,13}'), this.jmbgValidator.bind(this)]),\n      phone: new FormControl(this.editUser.phone, [Validators.required,Validators.pattern('[0-9]*')]),\n      //feature if driver can change cars\n      //carNumber: new FormControl(null),\n    });\n  }\n\n  onEdit(){\n    let editUser:INewUser = {\n      username:this.editUser.username,\n      password:this.registrationForm.value['password'],\n      email:this.registrationForm.value['email'],\n      name:this.registrationForm.value['name'],\n      lastname:this.registrationForm.value['lastname'],\n      jmbg:this.registrationForm.value['jmbg'],\n      phone:this.registrationForm.value['phone'],\n      //in future if driver can change to read from form\n      carNumber: this.editUser.carNumber,\n      userType : this.authService.getUserType(),\n      blocked: this.editUser.blocked\n    };\n\n    this.usersService.updateUser(editUser);\n    this.router.navigate(['/profile']);\n  }\n  jmbgValidator(control:FormControl) : {[s:string]:boolean}{\n    if(!this.checkJmbg(control.value)){\n      return {'jmbgInvalid':true};\n    }\n    return null;\n  }\n  private checkJmbg(jmbg : string) : boolean{\n    if(!jmbg){\n      return true;\n    }\n    let a = +jmbg[0];\n    let b = +jmbg[1];\n    let c = +jmbg[2];\n    let d = +jmbg[3];\n    let e = +jmbg[4];\n    let f = +jmbg[5];\n    let g = +jmbg[6];\n    let h = +jmbg[7];\n    let i = +jmbg[8];\n    let j = +jmbg[9];\n    let k = +jmbg[10];\n    let l = +jmbg[11];\n    let m = +jmbg[12];\n    const checksum = 11 - ((7*(a+g)+6*(b+h)+5*(c+i)+4*(d+j)+3*(e+k)+2*(f+l)) % 11);\n    if(m != checksum)\n      return false;\n    return true;\n  }\n\n}\n","module.exports = \"p{\\r\\n    font-size: 20px\\r\\n}\"","module.exports = \"<h2>Details</h2>\\n<div class=\\\"list-group\\\">\\n  <p>Name: {{user.name}}</p>\\n  <p>Lastname: {{user.lastname}}</p>\\n  <p>Username: {{user.username}}</p>\\n  <p>Email: {{user.email}}</p>\\n  <p>JMBG: {{user.jmbg}}</p>\\n  <p>Phone: {{user.phone}}</p>\\n  <p *ngIf=\\\"user && user.userType && user.userType === 2\\\">Car number: {{user.carNumber}}</p>\\n</div>\\n<hr>\\n<div class=\\\"row\\\">\\n  <button type=\\\"button\\\" class=\\\"col-sm-2 btn btn-primary\\\" (click)=\\\"onUserChange()\\\">Edit</button>\\n</div>\\n<br>\\n<div class=\\\"row\\\">\\n    <button type=\\\"button\\\" class=\\\"col-sm-2 btn btn-primary\\\" (click)=\\\"onPasswordChange()\\\">Change Password</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../services/auth.service';\nimport { UsersService } from '../../../services/users.service';\nimport { INewUser } from '../../../services/interfaces';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-full-user-details',\n  templateUrl: './full-user-details.component.html',\n  styleUrls: ['./full-user-details.component.css']\n})\nexport class FullUserDetailsComponent implements OnInit {\n\n  user : INewUser;\n  constructor(private authService:AuthService,\n              private usersService:UsersService,\n              private router:Router) { }\n\n  ngOnInit() {\n    const username = this.authService.getCurrentUsername();\n    this.user = this.usersService.getUser(username);\n  }\n\n  onUserChange(){\n    this.router.navigate(['/edit-profile']);\n  }\n\n  onPasswordChange(){\n    this.router.navigate(['password-change']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<h2>Details</h2>\\n<div class=\\\"pull-left\\\">\\n  <p class=\\\"list-group-item-text\\\">Username: {{user.username}}</p>\\n  <p class=\\\"list-group-item-text\\\">Email: {{user.email}}</p>\\n  <p class=\\\"list-group-item-text\\\">Phone: {{user.phone}}</p>\\n  <p class=\\\"list-group-item-text\\\">Type: {{userType}}</p>\\n</div>\\n<div class=\\\"pull-right\\\">\\n<button *ngIf=\\\"!user.blocked\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onBlock()\\\">Block user</button>\\n<button *ngIf=\\\"user.blocked\\\" class=\\\"btn btn-success\\\" (click)=\\\"onUnblock()\\\">Unblock user</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../../../../services/users.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { IBasicUser } from '../../../../services/interfaces';\nimport { Usertype } from '../../../../services/usertype.enum';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n\n  private username: string;\n  user :IBasicUser;\n  userType : string;\n  notBlocked = true;\n  blocked = false;\n\n  constructor(private usersService:UsersService,\n              private route:ActivatedRoute,\n              private router:Router) { }\n\n  ngOnInit() {\n    this.route.params.subscribe((params:Params) => {\n      this.username = params['username'];\n      if(!params['username']){\n        this.router.navigate(['../'], {relativeTo:this.route});\n      }\n\n      this.updateUser();\n      switch(this.user.type){\n        case Usertype.Customer: this.userType = 'Customer';break;\n        case Usertype.Driver: this.userType = 'Driver';break;\n      }\n    });\n  }\n\n  onBlock(){\n    this.usersService.blockUser(this.username);\n    this.updateUser();\n  }\n\n  onUnblock(){\n    this.usersService.unblockUser(this.username);\n    this.updateUser();\n  }\n\n  private updateUser(){\n    this.user = this.usersService.getUserBasicInfo(this.username);\n  }\n}\n","module.exports = \"\"","module.exports = \"<a [routerLink]=\\\"[username]\\\" routerLinkActive=\\\"active\\\" style=\\\"cursor:pointer\\\" class=\\\"list-group-item clearfix\\\" >\\n  <div class=\\\"pull-left\\\">\\n      <h4 class=\\\"list-group-item-heading\\\">{{username}}</h4>\\n  </div>\\n</a>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { IBasicUser } from '../../../../services/interfaces';\n\n@Component({\n  selector: 'app-user-item',\n  templateUrl: './user-item.component.html',\n  styleUrls: ['./user-item.component.css']\n})\nexport class UserItemComponent implements OnInit {\n\n  @Input() username : IBasicUser;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\" row well well-sm pre-scrollable\\\">\\n  <div class=\\\"list-group\\\">\\n  <app-user-item *ngFor=\\\"let username of users\\\"\\n  [username]=\\\"username\\\"></app-user-item>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../../../../services/users.service';\nimport { IBasicUser } from '../../../../services/interfaces';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  users : string[] = [];\n  constructor(private userService:UsersService) { }\n\n  ngOnInit() {\n    this.users = this.userService.getAllUsersUsernames();\n    this.userService.usersChanged.subscribe((changedUsersInfo) =>{\n      this.users = changedUsersInfo;\n    })\n  }\n}\n","module.exports = \"input.ng-touched.ng-invalid{\\r\\n    border: 1px red solid\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\n      <form [formGroup]=\\\"passwordChangeForm\\\" (submit)=\\\"onConfirm()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">New Password</label>\\n          <input type=\\\"text\\\" id=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"confirm\\\">Confirm Password</label>\\n          <input type=\\\"text\\\" id=\\\"confirm\\\" formControlName=\\\"confirm\\\" class=\\\"form-control\\\">\\n          <span *ngIf=\\\"!passwordChangeForm.get('confirm').valid && passwordChangeForm.get('confirm').touched && passwordChangeForm.get('confirm').errors['confirmError']\\\">Password must match!</span>\\n        </div>\\n        <br>\\n        <button [disabled]=\\\"!passwordChangeForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\">Confirm</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UsersService } from '../../../services/users.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-password-change',\n  templateUrl: './password-change.component.html',\n  styleUrls: ['./password-change.component.css']\n})\nexport class PasswordChangeComponent implements OnInit {\n\n  passwordChangeForm : FormGroup;\n\n  constructor(private usersService:UsersService,\n              private authService:AuthService) { }\n\n  ngOnInit() {\n    this.passwordChangeForm = new FormGroup({\n      password: new FormControl(null, Validators.required),\n      \n    });\n    //added like this since we need the first password field (and form) initialize\n    //when checking validity of password confirmation\n    this.passwordChangeForm.addControl('confirm', new FormControl(null, [Validators.required, this.confirmError.bind(this)]));\n  }\n\n  confirmError(control:FormControl) : {[s:string]:boolean}{\n    if(control.value !== this.passwordChangeForm.value.password){\n      return {'confirmError' : true};\n    }\n    return null;\n  }\n\n  onConfirm(){\n    const username = this.authService.getCurrentUsername();\n    this.usersService.changePassword(username, this.passwordChangeForm.value.password);\n    this.authService.logout();\n  }\n}\n","module.exports = \"input.ng-invalid.ng-touched{\\r\\n    border: 1px red solid\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\n        <form [formGroup]=\\\"registrationForm\\\" (submit)=\\\"onRegistration()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"username\\\">Username *</label>\\n            <input type=\\\"text\\\" id=\\\"username\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\">\\n            <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('username').touched && registrationForm.get('username').invalid\\\">This fields is required</span>\\n            <span></span>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password *</label>\\n            <input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\">\\n            <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('password').touched && registrationForm.get('password').invalid\\\">This fields is required</span>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email *</label>\\n            <input type=\\\"email\\\" id=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\">\\n            <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('email').invalid && registrationForm.get('email').touched && registrationForm.get('email').errors['required']\\\">This fields is required</span>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('email').invalid && registrationForm.get('email').touched && registrationForm.get('email').errors['email']\\\">Invalid email format</span>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" id=\\\"name\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"lastname\\\">Lastname</label>\\n            <input type=\\\"text\\\" id=\\\"lastname\\\" formControlName=\\\"lastname\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"jmbg\\\">JMBG</label>\\n            <input type=\\\"text\\\" id=\\\"jmbg\\\" formControlName=\\\"jmbg\\\" class=\\\"form-control\\\">\\n            <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('jmbg').invalid && registrationForm.get('jmbg').touched && registrationForm.get('jmbg').errors['jmbgInvalid']\\\">Invalid JMBG</span>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"phone\\\">Phone *</label>\\n            <input type=\\\"text\\\" id=\\\"phone\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\">\\n            <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('phone').invalid && registrationForm.get('phone').touched && registrationForm.get('phone').errors['required']\\\">This fields is required.</span>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"registrationForm.get('phone').invalid && registrationForm.get('phone').touched && registrationForm.get('phone').errors['pattern']\\\">Phone can contain only numbers.</span>\\n          </div>\\n          <div class=\\\"form-group\\\" *ngIf=\\\"isDriver\\\">\\n            <label for=\\\"carNumber\\\">Car Number</label>\\n            <select id=\\\"carNumber\\\" formControlName=\\\"carNumber\\\" class=\\\"form-control\\\">\\n              <option *ngFor=\\\"let car of freeCars\\\" [value]=\\\"car.carNumber\\\">{{car.carNumber}}</option>\\n            </select>\\n          </div>\\n          <br>\\n          <span class=\\\"help-block\\\">Fields marked with * are required.</span>\\n          <button [disabled]=\\\"!registrationForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\">Login</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ICar, INewUser } from '../../../services/interfaces';\nimport { CarsDataService } from '../../../services/cars-data.service';\nimport { UsersService } from '../../../services/users.service';\nimport { Usertype } from '../../../services/usertype.enum';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit, OnDestroy {\n\n  registrationForm: FormGroup;\n  isDriver = false;\n  freeCars : ICar[];\n  private typeSubscription:Subscription;\n  constructor(private route:ActivatedRoute,\n              private router:Router,\n              private carsService:CarsDataService,\n              private usersService:UsersService) { }\n\n  ngOnInit() {\n    //subscribe to query params to protect initialized component tampering trough query\n    this.typeSubscription = this.route.queryParams.subscribe((query) =>{\n      const type = query['type'];\n      if(!type || (type !== 'customer' && type !== 'driver')){\n        this.router.navigate([''], {relativeTo:this.route, queryParams:{type:'customer'}});\n      }else{\n        if(type === 'driver'){\n          this.isDriver = true;\n          this.freeCars = this.carsService.getFreeCars();\n          if(this.freeCars.length == 0){\n            this.router.navigate(['/driver-registration-error']);\n          }\n        }else{\n          this.isDriver = false;\n          this.freeCars = [];\n        }\n      }\n    });\n\n\n    this.registrationForm = new FormGroup({\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required), \n      email: new FormControl(null, [Validators.required, Validators.email]),\n      name: new FormControl(null),\n      lastname: new FormControl(null),\n      jmbg: new FormControl(null, [Validators.pattern('[0-9]{13,13}'), this.jmbgValidator.bind(this)]),\n      phone: new FormControl(null, [Validators.required,Validators.pattern('[0-9]*')]),\n      carNumber: new FormControl(null),\n    });\n  }\n\n  ngOnDestroy(){\n    this.typeSubscription.unsubscribe();\n  }\n  onRegistration(){\n    let newUser:INewUser = {\n      username:this.registrationForm.value['username'],\n      password:this.registrationForm.value['password'],\n      email:this.registrationForm.value['email'],\n      name:this.registrationForm.value['name'],\n      lastname:this.registrationForm.value['lastname'],\n      jmbg:this.registrationForm.value['jmbg'],\n      phone:this.registrationForm.value['phone'],\n      carNumber:this.registrationForm.value['carNumber'],\n      userType: this.isDriver ? Usertype.Driver : Usertype.Customer,\n      blocked: false,\n    };\n    this.usersService.addNewUser(newUser);\n  }\n\n  jmbgValidator(control:FormControl) : {[s:string]:boolean}{\n    if(!this.checkJmbg(control.value)){\n      return {'jmbgInvalid':true};\n    }\n    return null;\n  }\n  private checkJmbg(jmbg : string) : boolean{\n    if(!jmbg){\n      return true;\n    }\n    let a = +jmbg[0];\n    let b = +jmbg[1];\n    let c = +jmbg[2];\n    let d = +jmbg[3];\n    let e = +jmbg[4];\n    let f = +jmbg[5];\n    let g = +jmbg[6];\n    let h = +jmbg[7];\n    let i = +jmbg[8];\n    let j = +jmbg[9];\n    let k = +jmbg[10];\n    let l = +jmbg[11];\n    let m = +jmbg[12];\n    const checksum = 11 - ((7*(a+g)+6*(b+h)+5*(c+i)+4*(d+j)+3*(e+k)+2*(f+l)) % 11);\n    if(m != checksum)\n      return false;\n    return true;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <h3>All users</h3>\\n    <app-user-list></app-user-list>\\n  </div>\\n  <div class=\\\"col-md-5 col-md-offset-1\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Directive, HostBinding, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appDropdown]'\n})\nexport class DropdownDirective {\n  @HostBinding('class.open') isOpen = false;\n    \n  @HostListener('click') toogleOpen(){\n      this.isOpen = !this.isOpen;\n  }\n  @HostListener('mouseleave') openOnFocus(){\n    this.isOpen = false;\n  }\n  constructor() { }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService:AuthService,\n              private router:Router){}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean \n    {\n    if(this.authService.isUserAuthenticated()){\n      return true;\n    }else{\n      this.router.navigate(['login']);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n\n  constructor(private authService:AuthService,\n              private router:Router){}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    \n      if(!this.authService.isUserAuthenticated()){\n        return true;\n      }else{\n        this.router.navigate(['/home']);\n      }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { Usertype } from '../services/usertype.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoDriverGuard implements CanActivate {\n  constructor(private authService:AuthService,\n              private router:Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      if(this.authService.getUserType() === Usertype.Driver){\n        this.router.navigate(['/home', 'rides']);\n      }else{\n        return true;\n      }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationGuard implements CanActivate {\n  constructor(private router:Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      if(!next.queryParams['type'] || (next.queryParams['type'] !== 'customer' && next.queryParams['type'] !== 'driver')){\n        this.router.navigate(['/login']);\n      }\n      return true;\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { Usertype } from './usertype.enum';\r\nimport { CookieService } from './cookie.service';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { UsersService } from './users.service';\r\nimport { Router } from '@angular/router';\r\nimport { ExternalApisDataService } from './external-apis-data.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService{\r\n\r\n  private currentUser:User = {username:null,usertype:Usertype.Guest,token:null};\r\n  private authenticated:boolean = false;\r\n  \r\n  userChanged = new Subject<User>();\r\n  authStatus = new Subject<boolean>();\r\n\r\n  constructor(private cookieService: CookieService,\r\n              private usersService:UsersService,\r\n              private router:Router,\r\n              private http:HttpClient,\r\n              private externalApisDataService:ExternalApisDataService) { \r\n\r\n    const cookie = cookieService.getCookie(\"taxiServiceData\");\r\n    if(cookie !== \"\"){\r\n      const user = this.decodeCookie(cookie);\r\n      if(user.username === 'undefined')\r\n        this.logout();\r\n      this.currentUser.username = user.username;\r\n      this.currentUser.usertype = user.usertype;\r\n      this.currentUser.token = user.token;\r\n      this.authenticated = true;  \r\n      this.userChanged.next(this.currentUser);\r\n    }else{\r\n      this.authenticated = false;\r\n    }\r\n  }\r\n\r\n  authenticateUser(username:string,password:string) : Subject<boolean> | boolean{\r\n    if(this.authenticated){\r\n      return true;\r\n    }\r\n\r\n    const url = this.externalApisDataService.getDataApiHostname() + '/access/login';\r\n    \r\n    this.http.post(url, {username:username, password:password}).subscribe(\r\n      data =>{\r\n        this.currentUser.username = username;\r\n        this.currentUser.token = data as string;\r\n        console.log(this.currentUser.token);\r\n        this.currentUser.usertype = Usertype.Driver;\r\n        this.authenticated = true;\r\n        const cookie = this.createCookie();\r\n        this.cookieService.setCookie('taxiServiceData',cookie, 365);\r\n        this.userChanged.next(this.currentUser);\r\n        this.router.navigate(['/home']);\r\n        this.authStatus.next(true);\r\n      },\r\n      error => {\r\n        console.log(error.status);\r\n        this.authStatus.next(false);\r\n      }\r\n    );\r\n    return this.authStatus;\r\n  }\r\n\r\n  isUserAuthenticated(){\r\n    return this.authenticated;\r\n  }\r\n\r\n  removeUser(username:string){\r\n    this.usersService.removeUser(username);\r\n    this.logout();\r\n  }\r\n\r\n  logout(){\r\n    this.currentUser.username = null;\r\n    this.currentUser.usertype = Usertype.Guest;\r\n    this.currentUser.token = null;\r\n    this.authenticated = false;\r\n    this.cookieService.removeCookie('taxiServiceData');\r\n    this.userChanged.next(this.currentUser);\r\n    this.router.navigate(['\\login']);\r\n  }\r\n\r\n  getUserType() : Usertype{\r\n    return this.currentUser.usertype;\r\n  }\r\n\r\n  getCurrentUsername() : string{\r\n    return this.currentUser.username;\r\n  }\r\n\r\n  private createCookie() : string{\r\n    //api token to be added later\r\n    if(this.authenticated){\r\n      return this.currentUser.username + ',' + this.currentUser.usertype + ',' + this.currentUser.token;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private decodeCookie(cookie:string) : User{\r\n   const split = cookie.split(',');\r\n\r\n   return {\r\n     username:split[0],\r\n     usertype:+split[1],\r\n     token:''\r\n   };\r\n  }\r\n}\r\n  \r\n//interface for user data saved in cookie\r\n  export interface User{\r\n    username:string,\r\n    usertype:Usertype,\r\n    token:string\r\n  }","import { Injectable, OnInit } from '@angular/core';\r\nimport { ICar, CarType } from './interfaces';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CarsDataService implements OnInit {\r\n\r\n  private cars:ICar[] = [\r\n    {carNumber:10, carType:CarType.sedan, registration:'ns-111-aa',  driverId:2, year:2010},\r\n    {carNumber:11, carType:CarType.van, registration:'ns-112-aa',  driverId:null, year:2011},\r\n    {carNumber:12, carType:CarType.sedan, registration:'ns-113-aa',  driverId:null, year:2012},\r\n    {carNumber:13, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:14, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:15, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:16, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:17, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:18, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:19, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:20, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:21, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:22, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:23, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:24, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:25, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:26, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:27, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:28, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:29, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:30, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n    {carNumber:31, carType:CarType.van, registration:'ns-114-aa',  driverId:5, year:2013},\r\n  ];\r\n\r\n  carsChanged = new Subject<ICar[]>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(){\r\n  }\r\n\r\n  addNewCar(newCar:ICar){\r\n    this.cars.push(newCar);\r\n    this.carsChanged.next(this.cars.slice());\r\n  }\r\n\r\n  removeCar(carId:number){\r\n    const index = this.cars.findIndex((car:ICar) =>{return car.carNumber === carId});\r\n    if(index != -1){\r\n      this.cars.splice(index,1);\r\n    }\r\n    this.carsChanged.next(this.cars.slice());\r\n  }\r\n\r\n  getCar(driverId:number){\r\n    const foundCar = this.cars.findIndex((car:ICar) =>{return car.driverId === driverId});\r\n    if(foundCar != -1){\r\n      return this.cars[foundCar];\r\n    }else{\r\n      return null;\r\n    }\r\n  }\r\n\r\n  getCarByNumber(carNumber:number){\r\n    const foundCar = this.cars.findIndex((car:ICar) =>{return car.carNumber === carNumber});\r\n    if(foundCar != -1){\r\n      return this.cars[foundCar];\r\n    }else{\r\n      return null;\r\n    }\r\n  }\r\n\r\n  getAllCars(){\r\n    return this.cars.slice();\r\n  }\r\n\r\n  getFreeCars(){\r\n    let retCars : ICar[] = [];\r\n    this.cars.forEach((car:ICar) =>{\r\n      if(!car.driverId){\r\n        retCars.push(car);\r\n      }\r\n    });\r\n    return retCars;\r\n  }\r\n\r\n  anyFreeCars(){\r\n    const index = this.cars.findIndex((car:ICar) => {return car.driverId === null;})\r\n    return index !== -1 ? true : false;\r\n  }\r\n\r\n  updateCar(car:ICar){\r\n    let c = this.getCarByNumber(car.carNumber);\r\n    c.registration = car.registration;\r\n    c.year = car.year;\r\n    c.carType = car.carType;\r\n  }\r\n\r\n  exists(carNumber:number){\r\n    if(this.cars.findIndex((car:ICar) => {return car.carNumber === carNumber}) !== -1){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookieService {\n\n  constructor() { }\n\n  setCookie(cname, cvalue, exdays) {\n    let d = new Date();\n    d.setTime(d.getTime() + (exdays*24*60*60*1000));\n    let expires = \"expires=\"+ d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n  }\n\n  getCookie(cname) {\n        var name = cname + \"=\";\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var ca = decodedCookie.split(';');\n        for(var i = 0; i <ca.length; i++) {\n            var c = ca[i];\n            while (c.charAt(0) == ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) == 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n        return \"\";\n    }\n\n    removeCookie(cname){\n        const cookie = this.getCookie(cname);\n        if(cookie !== ''){\n            this.setCookie(cname, '', -1);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExternalApisDataService {\n\n  private gmapsKey = 'AIzaSyBrjeABCsOwW1rhi7eW6_b_fWF8OK2HeiA';\n  private hereAppId = 'bAXQChNSxbtNhSYbrloM';\n  private hereAppCode = '%20FT-7YO-65_E2m1OFO8NvqQ';\n  private dataApiAddress = 'http://localhost:7685/api';\n  constructor() { }\n\n  getGoogleMapsApiKey() : string{\n    return this.gmapsKey.slice();\n  }\n\n  getHereAppId():string{\n    return this.hereAppId.slice();\n  }\n\n  getHereAppCode():string{\n    return this.hereAppCode.slice();\n  }\n\n  getDataApiHostname(){\n    return this.dataApiAddress;\n  }\n}\n","import { Usertype } from \"./usertype.enum\";\r\n\r\nexport interface ICar{\r\n    driverId : number,\r\n    year: number,\r\n    registration: string,\r\n    carNumber: number,\r\n    carType: CarType\r\n}\r\n\r\nexport enum CarType{\r\n    sedan,\r\n    van,\r\n    undefined\r\n} \r\n\r\nexport interface INewUser{\r\n    username: string,\r\n    password: string,\r\n    email: string,\r\n    name: string,\r\n    lastname: string,\r\n    jmbg: string,\r\n    phone: number,\r\n    carNumber: number,\r\n    userType: Usertype,\r\n    blocked: boolean\r\n}\r\n\r\nexport interface IBasicUser{\r\n    username:string,\r\n    email: string,\r\n    type: Usertype,\r\n    phone: number,\r\n    blocked: boolean\r\n}\r\n\r\nexport interface IComment{\r\n    description: string,\r\n    time: string,\r\n    rating: number\r\n}\r\n\r\nexport interface ILocation{\r\n    lat:number,\r\n    long:number,\r\n    address: string\r\n}\r\n\r\nexport interface IRide{\r\n    id: number,\r\n    location: ILocation,\r\n    destination: ILocation,\r\n    customer: string,\r\n    driver: string,\r\n    dispatcher:string,\r\n    fare: number,\r\n    comment: IComment,\r\n    time:string,\r\n    status: RideStatus\r\n}\r\n\r\nexport enum RideStatus{\r\n    ordered,\r\n    processed,\r\n    waiting,\r\n    accepted,\r\n    cancelled,\r\n    sucessful,\r\n    failed\r\n}","import { Injectable } from '@angular/core';\nimport { IRide, RideStatus } from './interfaces';\nimport { Subject } from 'rxjs';\nimport { Usertype } from './usertype.enum';\nimport { stringify } from '@angular/compiler/src/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RidesService {\n\n  private rides : IRide[] = [\n    { id:0, \n      driver:null,\n      comment:null,\n      location:{lat:45.260030,long:19.832409, address: 'Bulevar oslobođenja 22-24, Novi Sad 21000'}, \n      destination:null,\n      fare:null, \n      status:RideStatus.waiting,\n      time: '01/06/2013 12:32',\n      dispatcher:null,\n      customer:null\n    },\n    { id:1, \n      driver:'d',\n      comment:null,\n      location:{lat:45.260030,long:19.832409, address: 'Bulevar oslobođenja 22-24, Novi Sad 21000'}, \n      destination:null,\n      fare:null, \n      status:RideStatus.sucessful,\n      time: '01/06/2013 12:32',\n      dispatcher:null,\n      customer:null\n    }\n  ];\n\n  ridesChanged = new Subject<IRide[]>();\n  waitingRidesChanged = new Subject<IRide[]>();\n  \n  constructor() { }\n\n  newRide(ride: IRide){\n    this.rides.push(ride);\n    if(ride.status === RideStatus.waiting){\n      this.waitingRidesChanged.next(this.getAllWaitingRides());\n    }\n    this.ridesChanged.next(this.getAllRides());\n  }\n\n  getAllWaitingRides(){\n    let output : IRide[] = [];\n\n    this.rides.forEach((ride:IRide) =>{\n      if(ride.status === RideStatus.waiting){\n        output.push(ride);\n      }\n    });\n    return output;\n  }\n\n  getAllRides(){\n    return this.rides.slice();\n  }\n\n  changeRideStatus(rideId:number, status:RideStatus){\n    this.rides.find((ride:IRide) =>{return ride.id === rideId}).status = status;\n  }\n\n  cancelRide(rideId:number) : boolean{\n    console.log(rideId);\n    let ride = this.getRideById(rideId);\n    if(ride.status !== RideStatus.waiting){\n      return false;\n    }\n    ride.status = RideStatus.cancelled;\n    this.waitingRidesChanged.next(this.getAllWaitingRides());\n    this.ridesChanged.next(this.getAllRides());\n    return true;\n  }\n\n  updateRideLocation(rideId:number,location:Location){\n\n  }\n\n  getRideById(id:number){\n    return this.rides.find((ride : IRide) => {return ride.id === id;})\n  }\n\n  getAllRidesForDriver(username:string) : IRide[]{\n    let rides: IRide[] = [];\n    this.rides.forEach((ride:IRide)=>{\n      if(ride.driver == username){\n        rides.push(ride);\n      }\n    })\n    return rides;\n  }\n\n  acceptRide(dispatcher:string, driver:string, rideId:number, userType:Usertype) : boolean{\n    let ride = this.rides.find((ride:IRide) =>{ \n      return ride.id == rideId;\n    });\n    if(!ride){\n      return false;\n    }\n    if(userType === Usertype.Driver){\n      ride.status = RideStatus.accepted;\n      ride.driver = driver;\n    }else{\n      console.log('dispatcher');\n      ride.status = RideStatus.processed;\n      ride.dispatcher = dispatcher;\n      ride.driver = driver;\n    }\n    this.ridesChanged.next(this.getAllRides());\n    this.waitingRidesChanged.next(this.getAllWaitingRides());\n    return true;\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { INewUser, IBasicUser } from './interfaces';\r\nimport { AuthService } from './auth.service';\r\nimport { Usertype } from './usertype.enum';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n  usersChanged = new Subject<string[]>();\r\n\r\n  private users:INewUser[] = [\r\n    {username:'c', password: 'c', userType: Usertype.Customer, carNumber:null, email:'customer@test.com', jmbg:null, name:null, lastname:null, phone:null, blocked:false},\r\n    {username:'d', password: 'd', userType: Usertype.Driver, carNumber:10, email:'driver@test.com', jmbg:null, name:null, lastname:null, phone:null, blocked:false},\r\n    {username:'a', password: 'a', userType: Usertype.Dispatcher, carNumber:null, email:'dispatcher@test.com', jmbg:null, name:null, lastname:null, phone:null, blocked:false},\r\n  ];;\r\n  constructor() { }\r\n\r\n  addNewUser(newUser: INewUser){\r\n    this.users.push(newUser);\r\n    this.usersChanged.next(this.getAllUsersUsernames());\r\n  }\r\n\r\n  updateUser(editUser: INewUser){\r\n    let user = this.getUser(editUser.username);\r\n    user.email = editUser.email;\r\n    user.jmbg = editUser.jmbg;\r\n    user.lastname = editUser.lastname;\r\n    user.name = editUser.name;\r\n    user.phone = editUser.phone;\r\n    user.carNumber = editUser.carNumber;\r\n  }\r\n\r\n  removeUser(username:string){\r\n    const index = this.users.findIndex((user:INewUser) =>{\r\n      return user.username === username;\r\n    })\r\n    if(index !== -1){\r\n      this.users.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  getUser(username:string){\r\n    return this.users.find((user:INewUser) => {return user.username === username;})\r\n  }\r\n\r\n  getUserBasicInfo(username:string) : IBasicUser {\r\n    const found = this.users.find((user:INewUser) => {return user.username === username});\r\n    if(!found){\r\n      return null;\r\n    }\r\n    return {\r\n      username : found.username,\r\n      email : found.email,\r\n      blocked : found.blocked,\r\n      phone : found.phone,\r\n      type : found.userType\r\n    }\r\n  }\r\n\r\n  getAllUsersUsernames() :string[]{\r\n    let output : string[] = [];\r\n\r\n    this.users.forEach((user:INewUser) =>{\r\n      if(user.userType != Usertype.Dispatcher){\r\n        output.push(user.username);\r\n      }\r\n    })\r\n\r\n    return output;\r\n  }\r\n\r\n  blockUser(username:string){\r\n    this.getUser(username).blocked = true;\r\n  }\r\n\r\n  unblockUser(username:string){\r\n    this.getUser(username).blocked = false;\r\n  }\r\n\r\n  changePassword(username:string,newPassword:string){\r\n    this.getUser(username).password = newPassword;\r\n  }\r\n\r\n  getAllDrivers() : string[]{\r\n    let drivers : string[] = [];\r\n\r\n    this.users.forEach((user:INewUser) =>{\r\n      if(user.userType === Usertype.Driver){\r\n        drivers.push(user.username);\r\n      }\r\n    })\r\n    \r\n    return drivers;\r\n  }\r\n}\r\n","export enum Usertype {\n    Guest,\n    Customer,\n    Driver,\n    Dispatcher\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}